import {
  require_baseEach,
  require_baseIteratee,
  require_baseUniq,
  require_isNumber,
  require_omit,
  require_sortBy,
  require_uniqBy
} from "./chunk-7MPSV6OQ.js";
import {
  $r,
  Dr,
  E,
  Fr,
  It,
  L,
  M,
  Mn,
  Pt,
  R,
  Rn,
  Rt,
  T,
  Ye,
  a,
  animated,
  b,
  bn,
  cn,
  ct,
  d,
  ft,
  gn,
  gt,
  hn,
  hr,
  ht,
  kn,
  to,
  useSpring,
  useTransition,
  ut,
  w,
  wn,
  z
} from "./chunk-S37JV2R7.js";
import {
  band,
  diverging_default,
  linear,
  log,
  number_default,
  point,
  require_arrayFilter,
  require_baseGetTag,
  require_baseUnary,
  require_isArray,
  require_isObjectLike,
  require_last,
  require_nodeUtil,
  round_default,
  stack_default,
  symlog,
  time,
  utcTime
} from "./chunk-RYRRM4P2.js";
import {
  require_jsx_runtime
} from "./chunk-Q5B56BVT.js";
import "./chunk-3M4ZFO5U.js";
import {
  require_react
} from "./chunk-YJYY6GXC.js";
import {
  __commonJS,
  __toESM
} from "./chunk-G3PMV62Z.js";

// node_modules/lodash/uniq.js
var require_uniq = __commonJS({
  "node_modules/lodash/uniq.js"(exports, module) {
    var baseUniq = require_baseUniq();
    function uniq(array2) {
      return array2 && array2.length ? baseUniq(array2) : [];
    }
    module.exports = uniq;
  }
});

// node_modules/lodash/_baseIsDate.js
var require_baseIsDate = __commonJS({
  "node_modules/lodash/_baseIsDate.js"(exports, module) {
    var baseGetTag = require_baseGetTag();
    var isObjectLike = require_isObjectLike();
    var dateTag = "[object Date]";
    function baseIsDate(value) {
      return isObjectLike(value) && baseGetTag(value) == dateTag;
    }
    module.exports = baseIsDate;
  }
});

// node_modules/lodash/isDate.js
var require_isDate = __commonJS({
  "node_modules/lodash/isDate.js"(exports, module) {
    var baseIsDate = require_baseIsDate();
    var baseUnary = require_baseUnary();
    var nodeUtil = require_nodeUtil();
    var nodeIsDate = nodeUtil && nodeUtil.isDate;
    var isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;
    module.exports = isDate;
  }
});

// node_modules/lodash/_baseFilter.js
var require_baseFilter = __commonJS({
  "node_modules/lodash/_baseFilter.js"(exports, module) {
    var baseEach = require_baseEach();
    function baseFilter(collection, predicate) {
      var result = [];
      baseEach(collection, function(value, index2, collection2) {
        if (predicate(value, index2, collection2)) {
          result.push(value);
        }
      });
      return result;
    }
    module.exports = baseFilter;
  }
});

// node_modules/lodash/filter.js
var require_filter = __commonJS({
  "node_modules/lodash/filter.js"(exports, module) {
    var arrayFilter = require_arrayFilter();
    var baseFilter = require_baseFilter();
    var baseIteratee = require_baseIteratee();
    var isArray = require_isArray();
    function filter2(collection, predicate) {
      var func = isArray(collection) ? arrayFilter : baseFilter;
      return func(collection, baseIteratee(predicate, 3));
    }
    module.exports = filter2;
  }
});

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_react3 = __toESM(require_react(), 1);

// node_modules/@nivo/axes/dist/nivo-axes.mjs
var t2 = __toESM(require_react(), 1);
var import_react = __toESM(require_react(), 1);

// node_modules/@nivo/axes/node_modules/d3-time/src/interval.js
var t0 = /* @__PURE__ */ new Date();
var t1 = /* @__PURE__ */ new Date();
function newInterval(floori, offseti, count2, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+date)), date;
  }
  interval.floor = function(date) {
    return floori(date = /* @__PURE__ */ new Date(+date)), date;
  };
  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };
  interval.round = function(date) {
    var d0 = interval(date), d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };
  interval.offset = function(date, step) {
    return offseti(date = /* @__PURE__ */ new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };
  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range;
    do
      range.push(previous = /* @__PURE__ */ new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };
  interval.filter = function(test) {
    return newInterval(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {
          }
        }
        else while (--step >= 0) {
          while (offseti(date, 1), !test(date)) {
          }
        }
      }
    });
  };
  if (count2) {
    interval.count = function(start, end) {
      t0.setTime(+start), t1.setTime(+end);
      floori(t0), floori(t1);
      return Math.floor(count2(t0, t1));
    };
    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function(d2) {
        return field(d2) % step === 0;
      } : function(d2) {
        return interval.count(0, d2) % step === 0;
      });
    };
  }
  return interval;
}

// node_modules/@nivo/axes/node_modules/d3-time/src/millisecond.js
var millisecond = newInterval(function() {
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});
millisecond.every = function(k2) {
  k2 = Math.floor(k2);
  if (!isFinite(k2) || !(k2 > 0)) return null;
  if (!(k2 > 1)) return millisecond;
  return newInterval(function(date) {
    date.setTime(Math.floor(date / k2) * k2);
  }, function(date, step) {
    date.setTime(+date + step * k2);
  }, function(start, end) {
    return (end - start) / k2;
  });
};
var millisecond_default = millisecond;
var milliseconds = millisecond.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/duration.js
var durationSecond = 1e3;
var durationMinute = durationSecond * 60;
var durationHour = durationMinute * 60;
var durationDay = durationHour * 24;
var durationWeek = durationDay * 7;
var durationMonth = durationDay * 30;
var durationYear = durationDay * 365;

// node_modules/@nivo/axes/node_modules/d3-time/src/second.js
var second = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * durationSecond);
}, function(start, end) {
  return (end - start) / durationSecond;
}, function(date) {
  return date.getUTCSeconds();
});
var second_default = second;
var seconds = second.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/minute.js
var minute = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getMinutes();
});
var minute_default = minute;
var minutes = minute.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/hour.js
var hour = newInterval(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond - date.getMinutes() * durationMinute);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getHours();
});
var hour_default = hour;
var hours = hour.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/day.js
var day = newInterval(
  (date) => date.setHours(0, 0, 0, 0),
  (date, step) => date.setDate(date.getDate() + step),
  (start, end) => (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay,
  (date) => date.getDate() - 1
);
var day_default = day;
var days = day.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/week.js
function weekday(i5) {
  return newInterval(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i5) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;
  });
}
var sunday = weekday(0);
var monday = weekday(1);
var tuesday = weekday(2);
var wednesday = weekday(3);
var thursday = weekday(4);
var friday = weekday(5);
var saturday = weekday(6);
var sundays = sunday.range;
var mondays = monday.range;
var tuesdays = tuesday.range;
var wednesdays = wednesday.range;
var thursdays = thursday.range;
var fridays = friday.range;
var saturdays = saturday.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/month.js
var month = newInterval(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});
var month_default = month;
var months = month.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/year.js
var year = newInterval(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});
year.every = function(k2) {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : newInterval(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k2) * k2);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k2);
  });
};
var year_default = year;
var years = year.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/utcMinute.js
var utcMinute = newInterval(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationMinute);
}, function(start, end) {
  return (end - start) / durationMinute;
}, function(date) {
  return date.getUTCMinutes();
});
var utcMinute_default = utcMinute;
var utcMinutes = utcMinute.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/utcHour.js
var utcHour = newInterval(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationHour);
}, function(start, end) {
  return (end - start) / durationHour;
}, function(date) {
  return date.getUTCHours();
});
var utcHour_default = utcHour;
var utcHours = utcHour.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/utcDay.js
var utcDay = newInterval(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / durationDay;
}, function(date) {
  return date.getUTCDate() - 1;
});
var utcDay_default = utcDay;
var utcDays = utcDay.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/utcWeek.js
function utcWeekday(i5) {
  return newInterval(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i5) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / durationWeek;
  });
}
var utcSunday = utcWeekday(0);
var utcMonday = utcWeekday(1);
var utcTuesday = utcWeekday(2);
var utcWednesday = utcWeekday(3);
var utcThursday = utcWeekday(4);
var utcFriday = utcWeekday(5);
var utcSaturday = utcWeekday(6);
var utcSundays = utcSunday.range;
var utcMondays = utcMonday.range;
var utcTuesdays = utcTuesday.range;
var utcWednesdays = utcWednesday.range;
var utcThursdays = utcThursday.range;
var utcFridays = utcFriday.range;
var utcSaturdays = utcSaturday.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/utcMonth.js
var utcMonth = newInterval(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});
var utcMonth_default = utcMonth;
var utcMonths = utcMonth.range;

// node_modules/@nivo/axes/node_modules/d3-time/src/utcYear.js
var utcYear = newInterval(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});
utcYear.every = function(k2) {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : newInterval(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k2) * k2);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k2);
  });
};
var utcYear_default = utcYear;
var utcYears = utcYear.range;

// node_modules/@nivo/axes/node_modules/d3-array/src/ascending.js
function ascending_default(a4, b4) {
  return a4 < b4 ? -1 : a4 > b4 ? 1 : a4 >= b4 ? 0 : NaN;
}

// node_modules/@nivo/axes/node_modules/d3-array/src/bisector.js
function bisector_default(f) {
  let delta = f;
  let compare = f;
  if (f.length === 1) {
    delta = (d2, x2) => f(d2) - x2;
    compare = ascendingComparator(f);
  }
  function left(a4, x2, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a4.length;
    while (lo < hi) {
      const mid = lo + hi >>> 1;
      if (compare(a4[mid], x2) < 0) lo = mid + 1;
      else hi = mid;
    }
    return lo;
  }
  function right(a4, x2, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a4.length;
    while (lo < hi) {
      const mid = lo + hi >>> 1;
      if (compare(a4[mid], x2) > 0) hi = mid;
      else lo = mid + 1;
    }
    return lo;
  }
  function center(a4, x2, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a4.length;
    const i5 = left(a4, x2, lo, hi - 1);
    return i5 > lo && delta(a4[i5 - 1], x2) > -delta(a4[i5], x2) ? i5 - 1 : i5;
  }
  return { left, center, right };
}
function ascendingComparator(f) {
  return (d2, x2) => ascending_default(f(d2), x2);
}

// node_modules/@nivo/axes/node_modules/d3-array/src/number.js
function number_default2(x2) {
  return x2 === null ? NaN : +x2;
}

// node_modules/@nivo/axes/node_modules/d3-array/src/bisect.js
var ascendingBisect = bisector_default(ascending_default);
var bisectRight = ascendingBisect.right;
var bisectLeft = ascendingBisect.left;
var bisectCenter = bisector_default(number_default2).center;

// node_modules/@nivo/axes/node_modules/d3-array/src/array.js
var array = Array.prototype;
var slice = array.slice;
var map = array.map;

// node_modules/@nivo/axes/node_modules/d3-array/src/ticks.js
var e10 = Math.sqrt(50);
var e5 = Math.sqrt(10);
var e2 = Math.sqrt(2);
function tickStep(start, stop, count2) {
  var step0 = Math.abs(stop - start) / Math.max(0, count2), step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)), error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}

// node_modules/@nivo/axes/node_modules/d3-array/src/shuffle.js
var shuffle_default = shuffler(Math.random);
function shuffler(random) {
  return function shuffle(array2, i0 = 0, i1 = array2.length) {
    let m2 = i1 - (i0 = +i0);
    while (m2) {
      const i5 = random() * m2-- | 0, t5 = array2[m2 + i0];
      array2[m2 + i0] = array2[i5 + i0];
      array2[i5 + i0] = t5;
    }
    return array2;
  };
}

// node_modules/@nivo/axes/node_modules/d3-time/src/ticks.js
function ticker(year3, month3, week, day3, hour3, minute3) {
  const tickIntervals = [
    [second_default, 1, durationSecond],
    [second_default, 5, 5 * durationSecond],
    [second_default, 15, 15 * durationSecond],
    [second_default, 30, 30 * durationSecond],
    [minute3, 1, durationMinute],
    [minute3, 5, 5 * durationMinute],
    [minute3, 15, 15 * durationMinute],
    [minute3, 30, 30 * durationMinute],
    [hour3, 1, durationHour],
    [hour3, 3, 3 * durationHour],
    [hour3, 6, 6 * durationHour],
    [hour3, 12, 12 * durationHour],
    [day3, 1, durationDay],
    [day3, 2, 2 * durationDay],
    [week, 1, durationWeek],
    [month3, 1, durationMonth],
    [month3, 3, 3 * durationMonth],
    [year3, 1, durationYear]
  ];
  function ticks(start, stop, count2) {
    const reverse2 = stop < start;
    if (reverse2) [start, stop] = [stop, start];
    const interval = count2 && typeof count2.range === "function" ? count2 : tickInterval(start, stop, count2);
    const ticks2 = interval ? interval.range(start, +stop + 1) : [];
    return reverse2 ? ticks2.reverse() : ticks2;
  }
  function tickInterval(start, stop, count2) {
    const target = Math.abs(stop - start) / count2;
    const i5 = bisector_default(([, , step2]) => step2).right(tickIntervals, target);
    if (i5 === tickIntervals.length) return year3.every(tickStep(start / durationYear, stop / durationYear, count2));
    if (i5 === 0) return millisecond_default.every(Math.max(tickStep(start, stop, count2), 1));
    const [t5, step] = tickIntervals[target / tickIntervals[i5 - 1][2] < tickIntervals[i5][2] / target ? i5 - 1 : i5];
    return t5.every(step);
  }
  return [ticks, tickInterval];
}
var [utcTicks, utcTickInterval] = ticker(utcYear_default, utcMonth_default, utcSunday, utcDay_default, utcHour_default, utcMinute_default);
var [timeTicks, timeTickInterval] = ticker(year_default, month_default, sunday, day_default, hour_default, minute_default);

// node_modules/@nivo/axes/node_modules/d3-time-format/src/locale.js
function localDate(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date = new Date(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
    date.setFullYear(d2.y);
    return date;
  }
  return new Date(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
}
function utcDate(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date = new Date(Date.UTC(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
    date.setUTCFullYear(d2.y);
    return date;
  }
  return new Date(Date.UTC(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
}
function newDate(y, m2, d2) {
  return { y, m: m2, d: d2, H: 0, M: 0, S: 0, L: 0 };
}
function formatLocale(locale4) {
  var locale_dateTime = locale4.dateTime, locale_date = locale4.date, locale_time = locale4.time, locale_periods = locale4.periods, locale_weekdays = locale4.days, locale_shortWeekdays = locale4.shortDays, locale_months = locale4.months, locale_shortMonths = locale4.shortMonths;
  var periodRe = formatRe(locale_periods), periodLookup = formatLookup(locale_periods), weekdayRe = formatRe(locale_weekdays), weekdayLookup = formatLookup(locale_weekdays), shortWeekdayRe = formatRe(locale_shortWeekdays), shortWeekdayLookup = formatLookup(locale_shortWeekdays), monthRe = formatRe(locale_months), monthLookup = formatLookup(locale_months), shortMonthRe = formatRe(locale_shortMonths), shortMonthLookup = formatLookup(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth,
    "e": formatDayOfMonth,
    "f": formatMicroseconds,
    "g": formatYearISO,
    "G": formatFullYearISO,
    "H": formatHour24,
    "I": formatHour12,
    "j": formatDayOfYear,
    "L": formatMilliseconds,
    "m": formatMonthNumber,
    "M": formatMinutes,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatSeconds,
    "u": formatWeekdayNumberMonday,
    "U": formatWeekNumberSunday,
    "V": formatWeekNumberISO,
    "w": formatWeekdayNumberSunday,
    "W": formatWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatYear,
    "Y": formatFullYear,
    "Z": formatZone,
    "%": formatLiteralPercent
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth,
    "e": formatUTCDayOfMonth,
    "f": formatUTCMicroseconds,
    "g": formatUTCYearISO,
    "G": formatUTCFullYearISO,
    "H": formatUTCHour24,
    "I": formatUTCHour12,
    "j": formatUTCDayOfYear,
    "L": formatUTCMilliseconds,
    "m": formatUTCMonthNumber,
    "M": formatUTCMinutes,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp,
    "s": formatUnixTimestampSeconds,
    "S": formatUTCSeconds,
    "u": formatUTCWeekdayNumberMonday,
    "U": formatUTCWeekNumberSunday,
    "V": formatUTCWeekNumberISO,
    "w": formatUTCWeekdayNumberSunday,
    "W": formatUTCWeekNumberMonday,
    "x": null,
    "X": null,
    "y": formatUTCYear,
    "Y": formatUTCFullYear,
    "Z": formatUTCZone,
    "%": formatLiteralPercent
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth,
    "e": parseDayOfMonth,
    "f": parseMicroseconds,
    "g": parseYear,
    "G": parseFullYear,
    "H": parseHour24,
    "I": parseHour24,
    "j": parseDayOfYear,
    "L": parseMilliseconds,
    "m": parseMonthNumber,
    "M": parseMinutes,
    "p": parsePeriod,
    "q": parseQuarter,
    "Q": parseUnixTimestamp,
    "s": parseUnixTimestampSeconds,
    "S": parseSeconds,
    "u": parseWeekdayNumberMonday,
    "U": parseWeekNumberSunday,
    "V": parseWeekNumberISO,
    "w": parseWeekdayNumberSunday,
    "W": parseWeekNumberMonday,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear,
    "Y": parseFullYear,
    "Z": parseZone,
    "%": parseLiteralPercent
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date) {
      var string = [], i5 = -1, j3 = 0, n5 = specifier.length, c, pad3, format2;
      if (!(date instanceof Date)) date = /* @__PURE__ */ new Date(+date);
      while (++i5 < n5) {
        if (specifier.charCodeAt(i5) === 37) {
          string.push(specifier.slice(j3, i5));
          if ((pad3 = pads[c = specifier.charAt(++i5)]) != null) c = specifier.charAt(++i5);
          else pad3 = c === "e" ? " " : "0";
          if (format2 = formats2[c]) c = format2(date, pad3);
          string.push(c);
          j3 = i5 + 1;
        }
      }
      string.push(specifier.slice(j3, i5));
      return string.join("");
    };
  }
  function newParse(specifier, Z3) {
    return function(string) {
      var d2 = newDate(1900, void 0, 1), i5 = parseSpecifier(d2, specifier, string += "", 0), week, day3;
      if (i5 != string.length) return null;
      if ("Q" in d2) return new Date(d2.Q);
      if ("s" in d2) return new Date(d2.s * 1e3 + ("L" in d2 ? d2.L : 0));
      if (Z3 && !("Z" in d2)) d2.Z = 0;
      if ("p" in d2) d2.H = d2.H % 12 + d2.p * 12;
      if (d2.m === void 0) d2.m = "q" in d2 ? d2.q : 0;
      if ("V" in d2) {
        if (d2.V < 1 || d2.V > 53) return null;
        if (!("w" in d2)) d2.w = 1;
        if ("Z" in d2) {
          week = utcDate(newDate(d2.y, 0, 1)), day3 = week.getUTCDay();
          week = day3 > 4 || day3 === 0 ? utcMonday.ceil(week) : utcMonday(week);
          week = utcDay_default.offset(week, (d2.V - 1) * 7);
          d2.y = week.getUTCFullYear();
          d2.m = week.getUTCMonth();
          d2.d = week.getUTCDate() + (d2.w + 6) % 7;
        } else {
          week = localDate(newDate(d2.y, 0, 1)), day3 = week.getDay();
          week = day3 > 4 || day3 === 0 ? monday.ceil(week) : monday(week);
          week = day_default.offset(week, (d2.V - 1) * 7);
          d2.y = week.getFullYear();
          d2.m = week.getMonth();
          d2.d = week.getDate() + (d2.w + 6) % 7;
        }
      } else if ("W" in d2 || "U" in d2) {
        if (!("w" in d2)) d2.w = "u" in d2 ? d2.u % 7 : "W" in d2 ? 1 : 0;
        day3 = "Z" in d2 ? utcDate(newDate(d2.y, 0, 1)).getUTCDay() : localDate(newDate(d2.y, 0, 1)).getDay();
        d2.m = 0;
        d2.d = "W" in d2 ? (d2.w + 6) % 7 + d2.W * 7 - (day3 + 5) % 7 : d2.w + d2.U * 7 - (day3 + 6) % 7;
      }
      if ("Z" in d2) {
        d2.H += d2.Z / 100 | 0;
        d2.M += d2.Z % 100;
        return utcDate(d2);
      }
      return localDate(d2);
    };
  }
  function parseSpecifier(d2, specifier, string, j3) {
    var i5 = 0, n5 = specifier.length, m2 = string.length, c, parse;
    while (i5 < n5) {
      if (j3 >= m2) return -1;
      c = specifier.charCodeAt(i5++);
      if (c === 37) {
        c = specifier.charAt(i5++);
        parse = parses[c in pads ? specifier.charAt(i5++) : c];
        if (!parse || (j3 = parse(d2, string, j3)) < 0) return -1;
      } else if (c != string.charCodeAt(j3++)) {
        return -1;
      }
    }
    return j3;
  }
  function parsePeriod(d2, string, i5) {
    var n5 = periodRe.exec(string.slice(i5));
    return n5 ? (d2.p = periodLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseShortWeekday(d2, string, i5) {
    var n5 = shortWeekdayRe.exec(string.slice(i5));
    return n5 ? (d2.w = shortWeekdayLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseWeekday(d2, string, i5) {
    var n5 = weekdayRe.exec(string.slice(i5));
    return n5 ? (d2.w = weekdayLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseShortMonth(d2, string, i5) {
    var n5 = shortMonthRe.exec(string.slice(i5));
    return n5 ? (d2.m = shortMonthLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseMonth(d2, string, i5) {
    var n5 = monthRe.exec(string.slice(i5));
    return n5 ? (d2.m = monthLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseLocaleDateTime(d2, string, i5) {
    return parseSpecifier(d2, locale_dateTime, string, i5);
  }
  function parseLocaleDate(d2, string, i5) {
    return parseSpecifier(d2, locale_date, string, i5);
  }
  function parseLocaleTime(d2, string, i5) {
    return parseSpecifier(d2, locale_time, string, i5);
  }
  function formatShortWeekday(d2) {
    return locale_shortWeekdays[d2.getDay()];
  }
  function formatWeekday(d2) {
    return locale_weekdays[d2.getDay()];
  }
  function formatShortMonth(d2) {
    return locale_shortMonths[d2.getMonth()];
  }
  function formatMonth(d2) {
    return locale_months[d2.getMonth()];
  }
  function formatPeriod(d2) {
    return locale_periods[+(d2.getHours() >= 12)];
  }
  function formatQuarter(d2) {
    return 1 + ~~(d2.getMonth() / 3);
  }
  function formatUTCShortWeekday(d2) {
    return locale_shortWeekdays[d2.getUTCDay()];
  }
  function formatUTCWeekday(d2) {
    return locale_weekdays[d2.getUTCDay()];
  }
  function formatUTCShortMonth(d2) {
    return locale_shortMonths[d2.getUTCMonth()];
  }
  function formatUTCMonth(d2) {
    return locale_months[d2.getUTCMonth()];
  }
  function formatUTCPeriod(d2) {
    return locale_periods[+(d2.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d2) {
    return 1 + ~~(d2.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    parse: function(specifier) {
      var p2 = newParse(specifier += "", false);
      p2.toString = function() {
        return specifier;
      };
      return p2;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    utcParse: function(specifier) {
      var p2 = newParse(specifier += "", true);
      p2.toString = function() {
        return specifier;
      };
      return p2;
    }
  };
}
var pads = { "-": "", "_": " ", "0": "0" };
var numberRe = /^\s*\d+/;
var percentRe = /^%/;
var requoteRe = /[\\^$*+?|[\]().{}]/g;
function pad(value, fill, width) {
  var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}
function requote(s) {
  return s.replace(requoteRe, "\\$&");
}
function formatRe(names) {
  return new RegExp("^(?:" + names.map(requote).join("|") + ")", "i");
}
function formatLookup(names) {
  return new Map(names.map((name, i5) => [name.toLowerCase(), i5]));
}
function parseWeekdayNumberSunday(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 1));
  return n5 ? (d2.w = +n5[0], i5 + n5[0].length) : -1;
}
function parseWeekdayNumberMonday(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 1));
  return n5 ? (d2.u = +n5[0], i5 + n5[0].length) : -1;
}
function parseWeekNumberSunday(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.U = +n5[0], i5 + n5[0].length) : -1;
}
function parseWeekNumberISO(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.V = +n5[0], i5 + n5[0].length) : -1;
}
function parseWeekNumberMonday(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.W = +n5[0], i5 + n5[0].length) : -1;
}
function parseFullYear(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 4));
  return n5 ? (d2.y = +n5[0], i5 + n5[0].length) : -1;
}
function parseYear(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.y = +n5[0] + (+n5[0] > 68 ? 1900 : 2e3), i5 + n5[0].length) : -1;
}
function parseZone(d2, string, i5) {
  var n5 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i5, i5 + 6));
  return n5 ? (d2.Z = n5[1] ? 0 : -(n5[2] + (n5[3] || "00")), i5 + n5[0].length) : -1;
}
function parseQuarter(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 1));
  return n5 ? (d2.q = n5[0] * 3 - 3, i5 + n5[0].length) : -1;
}
function parseMonthNumber(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.m = n5[0] - 1, i5 + n5[0].length) : -1;
}
function parseDayOfMonth(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.d = +n5[0], i5 + n5[0].length) : -1;
}
function parseDayOfYear(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 3));
  return n5 ? (d2.m = 0, d2.d = +n5[0], i5 + n5[0].length) : -1;
}
function parseHour24(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.H = +n5[0], i5 + n5[0].length) : -1;
}
function parseMinutes(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.M = +n5[0], i5 + n5[0].length) : -1;
}
function parseSeconds(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.S = +n5[0], i5 + n5[0].length) : -1;
}
function parseMilliseconds(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 3));
  return n5 ? (d2.L = +n5[0], i5 + n5[0].length) : -1;
}
function parseMicroseconds(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5, i5 + 6));
  return n5 ? (d2.L = Math.floor(n5[0] / 1e3), i5 + n5[0].length) : -1;
}
function parseLiteralPercent(d2, string, i5) {
  var n5 = percentRe.exec(string.slice(i5, i5 + 1));
  return n5 ? i5 + n5[0].length : -1;
}
function parseUnixTimestamp(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5));
  return n5 ? (d2.Q = +n5[0], i5 + n5[0].length) : -1;
}
function parseUnixTimestampSeconds(d2, string, i5) {
  var n5 = numberRe.exec(string.slice(i5));
  return n5 ? (d2.s = +n5[0], i5 + n5[0].length) : -1;
}
function formatDayOfMonth(d2, p2) {
  return pad(d2.getDate(), p2, 2);
}
function formatHour24(d2, p2) {
  return pad(d2.getHours(), p2, 2);
}
function formatHour12(d2, p2) {
  return pad(d2.getHours() % 12 || 12, p2, 2);
}
function formatDayOfYear(d2, p2) {
  return pad(1 + day_default.count(year_default(d2), d2), p2, 3);
}
function formatMilliseconds(d2, p2) {
  return pad(d2.getMilliseconds(), p2, 3);
}
function formatMicroseconds(d2, p2) {
  return formatMilliseconds(d2, p2) + "000";
}
function formatMonthNumber(d2, p2) {
  return pad(d2.getMonth() + 1, p2, 2);
}
function formatMinutes(d2, p2) {
  return pad(d2.getMinutes(), p2, 2);
}
function formatSeconds(d2, p2) {
  return pad(d2.getSeconds(), p2, 2);
}
function formatWeekdayNumberMonday(d2) {
  var day3 = d2.getDay();
  return day3 === 0 ? 7 : day3;
}
function formatWeekNumberSunday(d2, p2) {
  return pad(sunday.count(year_default(d2) - 1, d2), p2, 2);
}
function dISO(d2) {
  var day3 = d2.getDay();
  return day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
}
function formatWeekNumberISO(d2, p2) {
  d2 = dISO(d2);
  return pad(thursday.count(year_default(d2), d2) + (year_default(d2).getDay() === 4), p2, 2);
}
function formatWeekdayNumberSunday(d2) {
  return d2.getDay();
}
function formatWeekNumberMonday(d2, p2) {
  return pad(monday.count(year_default(d2) - 1, d2), p2, 2);
}
function formatYear(d2, p2) {
  return pad(d2.getFullYear() % 100, p2, 2);
}
function formatYearISO(d2, p2) {
  d2 = dISO(d2);
  return pad(d2.getFullYear() % 100, p2, 2);
}
function formatFullYear(d2, p2) {
  return pad(d2.getFullYear() % 1e4, p2, 4);
}
function formatFullYearISO(d2, p2) {
  var day3 = d2.getDay();
  d2 = day3 >= 4 || day3 === 0 ? thursday(d2) : thursday.ceil(d2);
  return pad(d2.getFullYear() % 1e4, p2, 4);
}
function formatZone(d2) {
  var z4 = d2.getTimezoneOffset();
  return (z4 > 0 ? "-" : (z4 *= -1, "+")) + pad(z4 / 60 | 0, "0", 2) + pad(z4 % 60, "0", 2);
}
function formatUTCDayOfMonth(d2, p2) {
  return pad(d2.getUTCDate(), p2, 2);
}
function formatUTCHour24(d2, p2) {
  return pad(d2.getUTCHours(), p2, 2);
}
function formatUTCHour12(d2, p2) {
  return pad(d2.getUTCHours() % 12 || 12, p2, 2);
}
function formatUTCDayOfYear(d2, p2) {
  return pad(1 + utcDay_default.count(utcYear_default(d2), d2), p2, 3);
}
function formatUTCMilliseconds(d2, p2) {
  return pad(d2.getUTCMilliseconds(), p2, 3);
}
function formatUTCMicroseconds(d2, p2) {
  return formatUTCMilliseconds(d2, p2) + "000";
}
function formatUTCMonthNumber(d2, p2) {
  return pad(d2.getUTCMonth() + 1, p2, 2);
}
function formatUTCMinutes(d2, p2) {
  return pad(d2.getUTCMinutes(), p2, 2);
}
function formatUTCSeconds(d2, p2) {
  return pad(d2.getUTCSeconds(), p2, 2);
}
function formatUTCWeekdayNumberMonday(d2) {
  var dow = d2.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday(d2, p2) {
  return pad(utcSunday.count(utcYear_default(d2) - 1, d2), p2, 2);
}
function UTCdISO(d2) {
  var day3 = d2.getUTCDay();
  return day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
}
function formatUTCWeekNumberISO(d2, p2) {
  d2 = UTCdISO(d2);
  return pad(utcThursday.count(utcYear_default(d2), d2) + (utcYear_default(d2).getUTCDay() === 4), p2, 2);
}
function formatUTCWeekdayNumberSunday(d2) {
  return d2.getUTCDay();
}
function formatUTCWeekNumberMonday(d2, p2) {
  return pad(utcMonday.count(utcYear_default(d2) - 1, d2), p2, 2);
}
function formatUTCYear(d2, p2) {
  return pad(d2.getUTCFullYear() % 100, p2, 2);
}
function formatUTCYearISO(d2, p2) {
  d2 = UTCdISO(d2);
  return pad(d2.getUTCFullYear() % 100, p2, 2);
}
function formatUTCFullYear(d2, p2) {
  return pad(d2.getUTCFullYear() % 1e4, p2, 4);
}
function formatUTCFullYearISO(d2, p2) {
  var day3 = d2.getUTCDay();
  d2 = day3 >= 4 || day3 === 0 ? utcThursday(d2) : utcThursday.ceil(d2);
  return pad(d2.getUTCFullYear() % 1e4, p2, 4);
}
function formatUTCZone() {
  return "+0000";
}
function formatLiteralPercent() {
  return "%";
}
function formatUnixTimestamp(d2) {
  return +d2;
}
function formatUnixTimestampSeconds(d2) {
  return Math.floor(+d2 / 1e3);
}

// node_modules/@nivo/axes/node_modules/d3-time-format/src/defaultLocale.js
var locale;
var timeFormat;
var timeParse;
var utcFormat;
var utcParse;
defaultLocale({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale(definition) {
  locale = formatLocale(definition);
  timeFormat = locale.format;
  timeParse = locale.parse;
  utcFormat = locale.utcFormat;
  utcParse = locale.utcParse;
  return locale;
}

// node_modules/@nivo/axes/node_modules/d3-time-format/src/isoFormat.js
var isoSpecifier = "%Y-%m-%dT%H:%M:%S.%LZ";
function formatIsoNative(date) {
  return date.toISOString();
}
var formatIso = Date.prototype.toISOString ? formatIsoNative : utcFormat(isoSpecifier);

// node_modules/@nivo/axes/node_modules/d3-time-format/src/isoParse.js
function parseIsoNative(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}
var parseIso = +/* @__PURE__ */ new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative : utcParse(isoSpecifier);

// node_modules/@nivo/axes/node_modules/d3-format/src/formatDecimal.js
function formatDecimal_default(x2) {
  return Math.abs(x2 = Math.round(x2)) >= 1e21 ? x2.toLocaleString("en").replace(/,/g, "") : x2.toString(10);
}
function formatDecimalParts(x2, p2) {
  if ((i5 = (x2 = p2 ? x2.toExponential(p2 - 1) : x2.toExponential()).indexOf("e")) < 0) return null;
  var i5, coefficient = x2.slice(0, i5);
  return [
    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,
    +x2.slice(i5 + 1)
  ];
}

// node_modules/@nivo/axes/node_modules/d3-format/src/exponent.js
function exponent_default(x2) {
  return x2 = formatDecimalParts(Math.abs(x2)), x2 ? x2[1] : NaN;
}

// node_modules/@nivo/axes/node_modules/d3-format/src/formatGroup.js
function formatGroup_default(grouping, thousands) {
  return function(value, width) {
    var i5 = value.length, t5 = [], j3 = 0, g2 = grouping[0], length = 0;
    while (i5 > 0 && g2 > 0) {
      if (length + g2 + 1 > width) g2 = Math.max(1, width - length);
      t5.push(value.substring(i5 -= g2, i5 + g2));
      if ((length += g2 + 1) > width) break;
      g2 = grouping[j3 = (j3 + 1) % grouping.length];
    }
    return t5.reverse().join(thousands);
  };
}

// node_modules/@nivo/axes/node_modules/d3-format/src/formatNumerals.js
function formatNumerals_default(numerals) {
  return function(value) {
    return value.replace(/[0-9]/g, function(i5) {
      return numerals[+i5];
    });
  };
}

// node_modules/@nivo/axes/node_modules/d3-format/src/formatSpecifier.js
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}
formatSpecifier.prototype = FormatSpecifier.prototype;
function FormatSpecifier(specifier) {
  this.fill = specifier.fill === void 0 ? " " : specifier.fill + "";
  this.align = specifier.align === void 0 ? ">" : specifier.align + "";
  this.sign = specifier.sign === void 0 ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === void 0 ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === void 0 ? void 0 : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === void 0 ? void 0 : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === void 0 ? "" : specifier.type + "";
}
FormatSpecifier.prototype.toString = function() {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === void 0 ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === void 0 ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};

// node_modules/@nivo/axes/node_modules/d3-format/src/formatTrim.js
function formatTrim_default(s) {
  out: for (var n5 = s.length, i5 = 1, i0 = -1, i1; i5 < n5; ++i5) {
    switch (s[i5]) {
      case ".":
        i0 = i1 = i5;
        break;
      case "0":
        if (i0 === 0) i0 = i5;
        i1 = i5;
        break;
      default:
        if (!+s[i5]) break out;
        if (i0 > 0) i0 = 0;
        break;
    }
  }
  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

// node_modules/@nivo/axes/node_modules/d3-format/src/formatPrefixAuto.js
var prefixExponent;
function formatPrefixAuto_default(x2, p2) {
  var d2 = formatDecimalParts(x2, p2);
  if (!d2) return x2 + "";
  var coefficient = d2[0], exponent = d2[1], i5 = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1, n5 = coefficient.length;
  return i5 === n5 ? coefficient : i5 > n5 ? coefficient + new Array(i5 - n5 + 1).join("0") : i5 > 0 ? coefficient.slice(0, i5) + "." + coefficient.slice(i5) : "0." + new Array(1 - i5).join("0") + formatDecimalParts(x2, Math.max(0, p2 + i5 - 1))[0];
}

// node_modules/@nivo/axes/node_modules/d3-format/src/formatRounded.js
function formatRounded_default(x2, p2) {
  var d2 = formatDecimalParts(x2, p2);
  if (!d2) return x2 + "";
  var coefficient = d2[0], exponent = d2[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

// node_modules/@nivo/axes/node_modules/d3-format/src/formatTypes.js
var formatTypes_default = {
  "%": function(x2, p2) {
    return (x2 * 100).toFixed(p2);
  },
  "b": function(x2) {
    return Math.round(x2).toString(2);
  },
  "c": function(x2) {
    return x2 + "";
  },
  "d": formatDecimal_default,
  "e": function(x2, p2) {
    return x2.toExponential(p2);
  },
  "f": function(x2, p2) {
    return x2.toFixed(p2);
  },
  "g": function(x2, p2) {
    return x2.toPrecision(p2);
  },
  "o": function(x2) {
    return Math.round(x2).toString(8);
  },
  "p": function(x2, p2) {
    return formatRounded_default(x2 * 100, p2);
  },
  "r": formatRounded_default,
  "s": formatPrefixAuto_default,
  "X": function(x2) {
    return Math.round(x2).toString(16).toUpperCase();
  },
  "x": function(x2) {
    return Math.round(x2).toString(16);
  }
};

// node_modules/@nivo/axes/node_modules/d3-format/src/identity.js
function identity_default2(x2) {
  return x2;
}

// node_modules/@nivo/axes/node_modules/d3-format/src/locale.js
var map3 = Array.prototype.map;
var prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
function locale_default(locale4) {
  var group2 = locale4.grouping === void 0 || locale4.thousands === void 0 ? identity_default2 : formatGroup_default(map3.call(locale4.grouping, Number), locale4.thousands + ""), currencyPrefix = locale4.currency === void 0 ? "" : locale4.currency[0] + "", currencySuffix = locale4.currency === void 0 ? "" : locale4.currency[1] + "", decimal = locale4.decimal === void 0 ? "." : locale4.decimal + "", numerals = locale4.numerals === void 0 ? identity_default2 : formatNumerals_default(map3.call(locale4.numerals, String)), percent = locale4.percent === void 0 ? "%" : locale4.percent + "", minus = locale4.minus === void 0 ? "-" : locale4.minus + "", nan = locale4.nan === void 0 ? "NaN" : locale4.nan + "";
  function newFormat(specifier) {
    specifier = formatSpecifier(specifier);
    var fill = specifier.fill, align = specifier.align, sign = specifier.sign, symbol = specifier.symbol, zero = specifier.zero, width = specifier.width, comma = specifier.comma, precision = specifier.precision, trim = specifier.trim, type = specifier.type;
    if (type === "n") comma = true, type = "g";
    else if (!formatTypes_default[type]) precision === void 0 && (precision = 12), trim = true, type = "g";
    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "=";
    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "", suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : "";
    var formatType = formatTypes_default[type], maybeSuffix = /[defgprs%]/.test(type);
    precision = precision === void 0 ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));
    function format2(value) {
      var valuePrefix = prefix, valueSuffix = suffix, i5, n5, c;
      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value;
        var valueNegative = value < 0 || 1 / value < 0;
        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);
        if (trim) value = formatTrim_default(value);
        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false;
        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : "");
        if (maybeSuffix) {
          i5 = -1, n5 = value.length;
          while (++i5 < n5) {
            if (c = value.charCodeAt(i5), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i5 + 1) : value.slice(i5)) + valueSuffix;
              value = value.slice(0, i5);
              break;
            }
          }
        }
      }
      if (comma && !zero) value = group2(value, Infinity);
      var length = valuePrefix.length + value.length + valueSuffix.length, padding = length < width ? new Array(width - length + 1).join(fill) : "";
      if (comma && zero) value = group2(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = "";
      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;
        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;
        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;
        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }
      return numerals(value);
    }
    format2.toString = function() {
      return specifier + "";
    };
    return format2;
  }
  function formatPrefix2(specifier, value) {
    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = "f", specifier)), e7 = Math.max(-8, Math.min(8, Math.floor(exponent_default(value) / 3))) * 3, k2 = Math.pow(10, -e7), prefix = prefixes[8 + e7 / 3];
    return function(value2) {
      return f(k2 * value2) + prefix;
    };
  }
  return {
    format: newFormat,
    formatPrefix: formatPrefix2
  };
}

// node_modules/@nivo/axes/node_modules/d3-format/src/defaultLocale.js
var locale2;
var format;
var formatPrefix;
defaultLocale2({
  decimal: ".",
  thousands: ",",
  grouping: [3],
  currency: ["$", ""],
  minus: "-"
});
function defaultLocale2(definition) {
  locale2 = locale_default(definition);
  format = locale2.format;
  formatPrefix = locale2.formatPrefix;
  return locale2;
}

// node_modules/@nivo/scales/dist/nivo-scales.mjs
var import_uniq = __toESM(require_uniq(), 1);
var import_uniqBy = __toESM(require_uniqBy(), 1);
var import_sortBy = __toESM(require_sortBy(), 1);
var import_last = __toESM(require_last(), 1);
var import_isDate = __toESM(require_isDate(), 1);

// node_modules/@nivo/scales/node_modules/d3-time/src/interval.js
var t02 = /* @__PURE__ */ new Date();
var t12 = /* @__PURE__ */ new Date();
function newInterval2(floori, offseti, count2, field) {
  function interval(date) {
    return floori(date = arguments.length === 0 ? /* @__PURE__ */ new Date() : /* @__PURE__ */ new Date(+date)), date;
  }
  interval.floor = function(date) {
    return floori(date = /* @__PURE__ */ new Date(+date)), date;
  };
  interval.ceil = function(date) {
    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;
  };
  interval.round = function(date) {
    var d0 = interval(date), d1 = interval.ceil(date);
    return date - d0 < d1 - date ? d0 : d1;
  };
  interval.offset = function(date, step) {
    return offseti(date = /* @__PURE__ */ new Date(+date), step == null ? 1 : Math.floor(step)), date;
  };
  interval.range = function(start, stop, step) {
    var range = [], previous;
    start = interval.ceil(start);
    step = step == null ? 1 : Math.floor(step);
    if (!(start < stop) || !(step > 0)) return range;
    do
      range.push(previous = /* @__PURE__ */ new Date(+start)), offseti(start, step), floori(start);
    while (previous < start && start < stop);
    return range;
  };
  interval.filter = function(test) {
    return newInterval2(function(date) {
      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);
    }, function(date, step) {
      if (date >= date) {
        if (step < 0) while (++step <= 0) {
          while (offseti(date, -1), !test(date)) {
          }
        }
        else while (--step >= 0) {
          while (offseti(date, 1), !test(date)) {
          }
        }
      }
    });
  };
  if (count2) {
    interval.count = function(start, end) {
      t02.setTime(+start), t12.setTime(+end);
      floori(t02), floori(t12);
      return Math.floor(count2(t02, t12));
    };
    interval.every = function(step) {
      step = Math.floor(step);
      return !isFinite(step) || !(step > 0) ? null : !(step > 1) ? interval : interval.filter(field ? function(d2) {
        return field(d2) % step === 0;
      } : function(d2) {
        return interval.count(0, d2) % step === 0;
      });
    };
  }
  return interval;
}

// node_modules/@nivo/scales/node_modules/d3-time/src/millisecond.js
var millisecond2 = newInterval2(function() {
}, function(date, step) {
  date.setTime(+date + step);
}, function(start, end) {
  return end - start;
});
millisecond2.every = function(k2) {
  k2 = Math.floor(k2);
  if (!isFinite(k2) || !(k2 > 0)) return null;
  if (!(k2 > 1)) return millisecond2;
  return newInterval2(function(date) {
    date.setTime(Math.floor(date / k2) * k2);
  }, function(date, step) {
    date.setTime(+date + step * k2);
  }, function(start, end) {
    return (end - start) / k2;
  });
};
var millisecond_default2 = millisecond2;
var milliseconds2 = millisecond2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/duration.js
var durationSecond2 = 1e3;
var durationMinute2 = 6e4;
var durationHour2 = 36e5;
var durationDay2 = 864e5;
var durationWeek2 = 6048e5;

// node_modules/@nivo/scales/node_modules/d3-time/src/second.js
var second2 = newInterval2(function(date) {
  date.setTime(date - date.getMilliseconds());
}, function(date, step) {
  date.setTime(+date + step * durationSecond2);
}, function(start, end) {
  return (end - start) / durationSecond2;
}, function(date) {
  return date.getUTCSeconds();
});
var second_default2 = second2;
var seconds2 = second2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/minute.js
var minute2 = newInterval2(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond2);
}, function(date, step) {
  date.setTime(+date + step * durationMinute2);
}, function(start, end) {
  return (end - start) / durationMinute2;
}, function(date) {
  return date.getMinutes();
});
var minute_default2 = minute2;
var minutes2 = minute2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/hour.js
var hour2 = newInterval2(function(date) {
  date.setTime(date - date.getMilliseconds() - date.getSeconds() * durationSecond2 - date.getMinutes() * durationMinute2);
}, function(date, step) {
  date.setTime(+date + step * durationHour2);
}, function(start, end) {
  return (end - start) / durationHour2;
}, function(date) {
  return date.getHours();
});
var hour_default2 = hour2;
var hours2 = hour2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/day.js
var day2 = newInterval2(function(date) {
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setDate(date.getDate() + step);
}, function(start, end) {
  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute2) / durationDay2;
}, function(date) {
  return date.getDate() - 1;
});
var day_default2 = day2;
var days2 = day2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/week.js
function weekday2(i5) {
  return newInterval2(function(date) {
    date.setDate(date.getDate() - (date.getDay() + 7 - i5) % 7);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setDate(date.getDate() + step * 7);
  }, function(start, end) {
    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute2) / durationWeek2;
  });
}
var sunday2 = weekday2(0);
var monday2 = weekday2(1);
var tuesday2 = weekday2(2);
var wednesday2 = weekday2(3);
var thursday2 = weekday2(4);
var friday2 = weekday2(5);
var saturday2 = weekday2(6);
var sundays2 = sunday2.range;
var mondays2 = monday2.range;
var tuesdays2 = tuesday2.range;
var wednesdays2 = wednesday2.range;
var thursdays2 = thursday2.range;
var fridays2 = friday2.range;
var saturdays2 = saturday2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/month.js
var month2 = newInterval2(function(date) {
  date.setDate(1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setMonth(date.getMonth() + step);
}, function(start, end) {
  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;
}, function(date) {
  return date.getMonth();
});
var month_default2 = month2;
var months2 = month2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/year.js
var year2 = newInterval2(function(date) {
  date.setMonth(0, 1);
  date.setHours(0, 0, 0, 0);
}, function(date, step) {
  date.setFullYear(date.getFullYear() + step);
}, function(start, end) {
  return end.getFullYear() - start.getFullYear();
}, function(date) {
  return date.getFullYear();
});
year2.every = function(k2) {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : newInterval2(function(date) {
    date.setFullYear(Math.floor(date.getFullYear() / k2) * k2);
    date.setMonth(0, 1);
    date.setHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setFullYear(date.getFullYear() + step * k2);
  });
};
var year_default2 = year2;
var years2 = year2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcMinute.js
var utcMinute2 = newInterval2(function(date) {
  date.setUTCSeconds(0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationMinute2);
}, function(start, end) {
  return (end - start) / durationMinute2;
}, function(date) {
  return date.getUTCMinutes();
});
var utcMinute_default2 = utcMinute2;
var utcMinutes2 = utcMinute2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcHour.js
var utcHour2 = newInterval2(function(date) {
  date.setUTCMinutes(0, 0, 0);
}, function(date, step) {
  date.setTime(+date + step * durationHour2);
}, function(start, end) {
  return (end - start) / durationHour2;
}, function(date) {
  return date.getUTCHours();
});
var utcHour_default2 = utcHour2;
var utcHours2 = utcHour2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcDay.js
var utcDay2 = newInterval2(function(date) {
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCDate(date.getUTCDate() + step);
}, function(start, end) {
  return (end - start) / durationDay2;
}, function(date) {
  return date.getUTCDate() - 1;
});
var utcDay_default2 = utcDay2;
var utcDays2 = utcDay2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcWeek.js
function utcWeekday2(i5) {
  return newInterval2(function(date) {
    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i5) % 7);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCDate(date.getUTCDate() + step * 7);
  }, function(start, end) {
    return (end - start) / durationWeek2;
  });
}
var utcSunday2 = utcWeekday2(0);
var utcMonday2 = utcWeekday2(1);
var utcTuesday2 = utcWeekday2(2);
var utcWednesday2 = utcWeekday2(3);
var utcThursday2 = utcWeekday2(4);
var utcFriday2 = utcWeekday2(5);
var utcSaturday2 = utcWeekday2(6);
var utcSundays2 = utcSunday2.range;
var utcMondays2 = utcMonday2.range;
var utcTuesdays2 = utcTuesday2.range;
var utcWednesdays2 = utcWednesday2.range;
var utcThursdays2 = utcThursday2.range;
var utcFridays2 = utcFriday2.range;
var utcSaturdays2 = utcSaturday2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcMonth.js
var utcMonth2 = newInterval2(function(date) {
  date.setUTCDate(1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCMonth(date.getUTCMonth() + step);
}, function(start, end) {
  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;
}, function(date) {
  return date.getUTCMonth();
});
var utcMonth_default2 = utcMonth2;
var utcMonths2 = utcMonth2.range;

// node_modules/@nivo/scales/node_modules/d3-time/src/utcYear.js
var utcYear2 = newInterval2(function(date) {
  date.setUTCMonth(0, 1);
  date.setUTCHours(0, 0, 0, 0);
}, function(date, step) {
  date.setUTCFullYear(date.getUTCFullYear() + step);
}, function(start, end) {
  return end.getUTCFullYear() - start.getUTCFullYear();
}, function(date) {
  return date.getUTCFullYear();
});
utcYear2.every = function(k2) {
  return !isFinite(k2 = Math.floor(k2)) || !(k2 > 0) ? null : newInterval2(function(date) {
    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k2) * k2);
    date.setUTCMonth(0, 1);
    date.setUTCHours(0, 0, 0, 0);
  }, function(date, step) {
    date.setUTCFullYear(date.getUTCFullYear() + step * k2);
  });
};
var utcYear_default2 = utcYear2;
var utcYears2 = utcYear2.range;

// node_modules/@nivo/scales/node_modules/d3-time-format/src/locale.js
function localDate2(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date = new Date(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
    date.setFullYear(d2.y);
    return date;
  }
  return new Date(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L);
}
function utcDate2(d2) {
  if (0 <= d2.y && d2.y < 100) {
    var date = new Date(Date.UTC(-1, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
    date.setUTCFullYear(d2.y);
    return date;
  }
  return new Date(Date.UTC(d2.y, d2.m, d2.d, d2.H, d2.M, d2.S, d2.L));
}
function newDate2(y, m2, d2) {
  return { y, m: m2, d: d2, H: 0, M: 0, S: 0, L: 0 };
}
function formatLocale2(locale4) {
  var locale_dateTime = locale4.dateTime, locale_date = locale4.date, locale_time = locale4.time, locale_periods = locale4.periods, locale_weekdays = locale4.days, locale_shortWeekdays = locale4.shortDays, locale_months = locale4.months, locale_shortMonths = locale4.shortMonths;
  var periodRe = formatRe2(locale_periods), periodLookup = formatLookup2(locale_periods), weekdayRe = formatRe2(locale_weekdays), weekdayLookup = formatLookup2(locale_weekdays), shortWeekdayRe = formatRe2(locale_shortWeekdays), shortWeekdayLookup = formatLookup2(locale_shortWeekdays), monthRe = formatRe2(locale_months), monthLookup = formatLookup2(locale_months), shortMonthRe = formatRe2(locale_shortMonths), shortMonthLookup = formatLookup2(locale_shortMonths);
  var formats = {
    "a": formatShortWeekday,
    "A": formatWeekday,
    "b": formatShortMonth,
    "B": formatMonth,
    "c": null,
    "d": formatDayOfMonth2,
    "e": formatDayOfMonth2,
    "f": formatMicroseconds2,
    "g": formatYearISO2,
    "G": formatFullYearISO2,
    "H": formatHour242,
    "I": formatHour122,
    "j": formatDayOfYear2,
    "L": formatMilliseconds2,
    "m": formatMonthNumber2,
    "M": formatMinutes2,
    "p": formatPeriod,
    "q": formatQuarter,
    "Q": formatUnixTimestamp2,
    "s": formatUnixTimestampSeconds2,
    "S": formatSeconds2,
    "u": formatWeekdayNumberMonday2,
    "U": formatWeekNumberSunday2,
    "V": formatWeekNumberISO2,
    "w": formatWeekdayNumberSunday2,
    "W": formatWeekNumberMonday2,
    "x": null,
    "X": null,
    "y": formatYear2,
    "Y": formatFullYear2,
    "Z": formatZone2,
    "%": formatLiteralPercent2
  };
  var utcFormats = {
    "a": formatUTCShortWeekday,
    "A": formatUTCWeekday,
    "b": formatUTCShortMonth,
    "B": formatUTCMonth,
    "c": null,
    "d": formatUTCDayOfMonth2,
    "e": formatUTCDayOfMonth2,
    "f": formatUTCMicroseconds2,
    "g": formatUTCYearISO2,
    "G": formatUTCFullYearISO2,
    "H": formatUTCHour242,
    "I": formatUTCHour122,
    "j": formatUTCDayOfYear2,
    "L": formatUTCMilliseconds2,
    "m": formatUTCMonthNumber2,
    "M": formatUTCMinutes2,
    "p": formatUTCPeriod,
    "q": formatUTCQuarter,
    "Q": formatUnixTimestamp2,
    "s": formatUnixTimestampSeconds2,
    "S": formatUTCSeconds2,
    "u": formatUTCWeekdayNumberMonday2,
    "U": formatUTCWeekNumberSunday2,
    "V": formatUTCWeekNumberISO2,
    "w": formatUTCWeekdayNumberSunday2,
    "W": formatUTCWeekNumberMonday2,
    "x": null,
    "X": null,
    "y": formatUTCYear2,
    "Y": formatUTCFullYear2,
    "Z": formatUTCZone2,
    "%": formatLiteralPercent2
  };
  var parses = {
    "a": parseShortWeekday,
    "A": parseWeekday,
    "b": parseShortMonth,
    "B": parseMonth,
    "c": parseLocaleDateTime,
    "d": parseDayOfMonth2,
    "e": parseDayOfMonth2,
    "f": parseMicroseconds2,
    "g": parseYear2,
    "G": parseFullYear2,
    "H": parseHour242,
    "I": parseHour242,
    "j": parseDayOfYear2,
    "L": parseMilliseconds2,
    "m": parseMonthNumber2,
    "M": parseMinutes2,
    "p": parsePeriod,
    "q": parseQuarter2,
    "Q": parseUnixTimestamp2,
    "s": parseUnixTimestampSeconds2,
    "S": parseSeconds2,
    "u": parseWeekdayNumberMonday2,
    "U": parseWeekNumberSunday2,
    "V": parseWeekNumberISO2,
    "w": parseWeekdayNumberSunday2,
    "W": parseWeekNumberMonday2,
    "x": parseLocaleDate,
    "X": parseLocaleTime,
    "y": parseYear2,
    "Y": parseFullYear2,
    "Z": parseZone2,
    "%": parseLiteralPercent2
  };
  formats.x = newFormat(locale_date, formats);
  formats.X = newFormat(locale_time, formats);
  formats.c = newFormat(locale_dateTime, formats);
  utcFormats.x = newFormat(locale_date, utcFormats);
  utcFormats.X = newFormat(locale_time, utcFormats);
  utcFormats.c = newFormat(locale_dateTime, utcFormats);
  function newFormat(specifier, formats2) {
    return function(date) {
      var string = [], i5 = -1, j3 = 0, n5 = specifier.length, c, pad3, format2;
      if (!(date instanceof Date)) date = /* @__PURE__ */ new Date(+date);
      while (++i5 < n5) {
        if (specifier.charCodeAt(i5) === 37) {
          string.push(specifier.slice(j3, i5));
          if ((pad3 = pads2[c = specifier.charAt(++i5)]) != null) c = specifier.charAt(++i5);
          else pad3 = c === "e" ? " " : "0";
          if (format2 = formats2[c]) c = format2(date, pad3);
          string.push(c);
          j3 = i5 + 1;
        }
      }
      string.push(specifier.slice(j3, i5));
      return string.join("");
    };
  }
  function newParse(specifier, Z3) {
    return function(string) {
      var d2 = newDate2(1900, void 0, 1), i5 = parseSpecifier(d2, specifier, string += "", 0), week, day3;
      if (i5 != string.length) return null;
      if ("Q" in d2) return new Date(d2.Q);
      if ("s" in d2) return new Date(d2.s * 1e3 + ("L" in d2 ? d2.L : 0));
      if (Z3 && !("Z" in d2)) d2.Z = 0;
      if ("p" in d2) d2.H = d2.H % 12 + d2.p * 12;
      if (d2.m === void 0) d2.m = "q" in d2 ? d2.q : 0;
      if ("V" in d2) {
        if (d2.V < 1 || d2.V > 53) return null;
        if (!("w" in d2)) d2.w = 1;
        if ("Z" in d2) {
          week = utcDate2(newDate2(d2.y, 0, 1)), day3 = week.getUTCDay();
          week = day3 > 4 || day3 === 0 ? utcMonday2.ceil(week) : utcMonday2(week);
          week = utcDay_default2.offset(week, (d2.V - 1) * 7);
          d2.y = week.getUTCFullYear();
          d2.m = week.getUTCMonth();
          d2.d = week.getUTCDate() + (d2.w + 6) % 7;
        } else {
          week = localDate2(newDate2(d2.y, 0, 1)), day3 = week.getDay();
          week = day3 > 4 || day3 === 0 ? monday2.ceil(week) : monday2(week);
          week = day_default2.offset(week, (d2.V - 1) * 7);
          d2.y = week.getFullYear();
          d2.m = week.getMonth();
          d2.d = week.getDate() + (d2.w + 6) % 7;
        }
      } else if ("W" in d2 || "U" in d2) {
        if (!("w" in d2)) d2.w = "u" in d2 ? d2.u % 7 : "W" in d2 ? 1 : 0;
        day3 = "Z" in d2 ? utcDate2(newDate2(d2.y, 0, 1)).getUTCDay() : localDate2(newDate2(d2.y, 0, 1)).getDay();
        d2.m = 0;
        d2.d = "W" in d2 ? (d2.w + 6) % 7 + d2.W * 7 - (day3 + 5) % 7 : d2.w + d2.U * 7 - (day3 + 6) % 7;
      }
      if ("Z" in d2) {
        d2.H += d2.Z / 100 | 0;
        d2.M += d2.Z % 100;
        return utcDate2(d2);
      }
      return localDate2(d2);
    };
  }
  function parseSpecifier(d2, specifier, string, j3) {
    var i5 = 0, n5 = specifier.length, m2 = string.length, c, parse;
    while (i5 < n5) {
      if (j3 >= m2) return -1;
      c = specifier.charCodeAt(i5++);
      if (c === 37) {
        c = specifier.charAt(i5++);
        parse = parses[c in pads2 ? specifier.charAt(i5++) : c];
        if (!parse || (j3 = parse(d2, string, j3)) < 0) return -1;
      } else if (c != string.charCodeAt(j3++)) {
        return -1;
      }
    }
    return j3;
  }
  function parsePeriod(d2, string, i5) {
    var n5 = periodRe.exec(string.slice(i5));
    return n5 ? (d2.p = periodLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseShortWeekday(d2, string, i5) {
    var n5 = shortWeekdayRe.exec(string.slice(i5));
    return n5 ? (d2.w = shortWeekdayLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseWeekday(d2, string, i5) {
    var n5 = weekdayRe.exec(string.slice(i5));
    return n5 ? (d2.w = weekdayLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseShortMonth(d2, string, i5) {
    var n5 = shortMonthRe.exec(string.slice(i5));
    return n5 ? (d2.m = shortMonthLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseMonth(d2, string, i5) {
    var n5 = monthRe.exec(string.slice(i5));
    return n5 ? (d2.m = monthLookup.get(n5[0].toLowerCase()), i5 + n5[0].length) : -1;
  }
  function parseLocaleDateTime(d2, string, i5) {
    return parseSpecifier(d2, locale_dateTime, string, i5);
  }
  function parseLocaleDate(d2, string, i5) {
    return parseSpecifier(d2, locale_date, string, i5);
  }
  function parseLocaleTime(d2, string, i5) {
    return parseSpecifier(d2, locale_time, string, i5);
  }
  function formatShortWeekday(d2) {
    return locale_shortWeekdays[d2.getDay()];
  }
  function formatWeekday(d2) {
    return locale_weekdays[d2.getDay()];
  }
  function formatShortMonth(d2) {
    return locale_shortMonths[d2.getMonth()];
  }
  function formatMonth(d2) {
    return locale_months[d2.getMonth()];
  }
  function formatPeriod(d2) {
    return locale_periods[+(d2.getHours() >= 12)];
  }
  function formatQuarter(d2) {
    return 1 + ~~(d2.getMonth() / 3);
  }
  function formatUTCShortWeekday(d2) {
    return locale_shortWeekdays[d2.getUTCDay()];
  }
  function formatUTCWeekday(d2) {
    return locale_weekdays[d2.getUTCDay()];
  }
  function formatUTCShortMonth(d2) {
    return locale_shortMonths[d2.getUTCMonth()];
  }
  function formatUTCMonth(d2) {
    return locale_months[d2.getUTCMonth()];
  }
  function formatUTCPeriod(d2) {
    return locale_periods[+(d2.getUTCHours() >= 12)];
  }
  function formatUTCQuarter(d2) {
    return 1 + ~~(d2.getUTCMonth() / 3);
  }
  return {
    format: function(specifier) {
      var f = newFormat(specifier += "", formats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    parse: function(specifier) {
      var p2 = newParse(specifier += "", false);
      p2.toString = function() {
        return specifier;
      };
      return p2;
    },
    utcFormat: function(specifier) {
      var f = newFormat(specifier += "", utcFormats);
      f.toString = function() {
        return specifier;
      };
      return f;
    },
    utcParse: function(specifier) {
      var p2 = newParse(specifier += "", true);
      p2.toString = function() {
        return specifier;
      };
      return p2;
    }
  };
}
var pads2 = { "-": "", "_": " ", "0": "0" };
var numberRe2 = /^\s*\d+/;
var percentRe2 = /^%/;
var requoteRe2 = /[\\^$*+?|[\]().{}]/g;
function pad2(value, fill, width) {
  var sign = value < 0 ? "-" : "", string = (sign ? -value : value) + "", length = string.length;
  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);
}
function requote2(s) {
  return s.replace(requoteRe2, "\\$&");
}
function formatRe2(names) {
  return new RegExp("^(?:" + names.map(requote2).join("|") + ")", "i");
}
function formatLookup2(names) {
  return new Map(names.map((name, i5) => [name.toLowerCase(), i5]));
}
function parseWeekdayNumberSunday2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 1));
  return n5 ? (d2.w = +n5[0], i5 + n5[0].length) : -1;
}
function parseWeekdayNumberMonday2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 1));
  return n5 ? (d2.u = +n5[0], i5 + n5[0].length) : -1;
}
function parseWeekNumberSunday2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.U = +n5[0], i5 + n5[0].length) : -1;
}
function parseWeekNumberISO2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.V = +n5[0], i5 + n5[0].length) : -1;
}
function parseWeekNumberMonday2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.W = +n5[0], i5 + n5[0].length) : -1;
}
function parseFullYear2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 4));
  return n5 ? (d2.y = +n5[0], i5 + n5[0].length) : -1;
}
function parseYear2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.y = +n5[0] + (+n5[0] > 68 ? 1900 : 2e3), i5 + n5[0].length) : -1;
}
function parseZone2(d2, string, i5) {
  var n5 = /^(Z)|([+-]\d\d)(?::?(\d\d))?/.exec(string.slice(i5, i5 + 6));
  return n5 ? (d2.Z = n5[1] ? 0 : -(n5[2] + (n5[3] || "00")), i5 + n5[0].length) : -1;
}
function parseQuarter2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 1));
  return n5 ? (d2.q = n5[0] * 3 - 3, i5 + n5[0].length) : -1;
}
function parseMonthNumber2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.m = n5[0] - 1, i5 + n5[0].length) : -1;
}
function parseDayOfMonth2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.d = +n5[0], i5 + n5[0].length) : -1;
}
function parseDayOfYear2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 3));
  return n5 ? (d2.m = 0, d2.d = +n5[0], i5 + n5[0].length) : -1;
}
function parseHour242(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.H = +n5[0], i5 + n5[0].length) : -1;
}
function parseMinutes2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.M = +n5[0], i5 + n5[0].length) : -1;
}
function parseSeconds2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 2));
  return n5 ? (d2.S = +n5[0], i5 + n5[0].length) : -1;
}
function parseMilliseconds2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 3));
  return n5 ? (d2.L = +n5[0], i5 + n5[0].length) : -1;
}
function parseMicroseconds2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5, i5 + 6));
  return n5 ? (d2.L = Math.floor(n5[0] / 1e3), i5 + n5[0].length) : -1;
}
function parseLiteralPercent2(d2, string, i5) {
  var n5 = percentRe2.exec(string.slice(i5, i5 + 1));
  return n5 ? i5 + n5[0].length : -1;
}
function parseUnixTimestamp2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5));
  return n5 ? (d2.Q = +n5[0], i5 + n5[0].length) : -1;
}
function parseUnixTimestampSeconds2(d2, string, i5) {
  var n5 = numberRe2.exec(string.slice(i5));
  return n5 ? (d2.s = +n5[0], i5 + n5[0].length) : -1;
}
function formatDayOfMonth2(d2, p2) {
  return pad2(d2.getDate(), p2, 2);
}
function formatHour242(d2, p2) {
  return pad2(d2.getHours(), p2, 2);
}
function formatHour122(d2, p2) {
  return pad2(d2.getHours() % 12 || 12, p2, 2);
}
function formatDayOfYear2(d2, p2) {
  return pad2(1 + day_default2.count(year_default2(d2), d2), p2, 3);
}
function formatMilliseconds2(d2, p2) {
  return pad2(d2.getMilliseconds(), p2, 3);
}
function formatMicroseconds2(d2, p2) {
  return formatMilliseconds2(d2, p2) + "000";
}
function formatMonthNumber2(d2, p2) {
  return pad2(d2.getMonth() + 1, p2, 2);
}
function formatMinutes2(d2, p2) {
  return pad2(d2.getMinutes(), p2, 2);
}
function formatSeconds2(d2, p2) {
  return pad2(d2.getSeconds(), p2, 2);
}
function formatWeekdayNumberMonday2(d2) {
  var day3 = d2.getDay();
  return day3 === 0 ? 7 : day3;
}
function formatWeekNumberSunday2(d2, p2) {
  return pad2(sunday2.count(year_default2(d2) - 1, d2), p2, 2);
}
function dISO2(d2) {
  var day3 = d2.getDay();
  return day3 >= 4 || day3 === 0 ? thursday2(d2) : thursday2.ceil(d2);
}
function formatWeekNumberISO2(d2, p2) {
  d2 = dISO2(d2);
  return pad2(thursday2.count(year_default2(d2), d2) + (year_default2(d2).getDay() === 4), p2, 2);
}
function formatWeekdayNumberSunday2(d2) {
  return d2.getDay();
}
function formatWeekNumberMonday2(d2, p2) {
  return pad2(monday2.count(year_default2(d2) - 1, d2), p2, 2);
}
function formatYear2(d2, p2) {
  return pad2(d2.getFullYear() % 100, p2, 2);
}
function formatYearISO2(d2, p2) {
  d2 = dISO2(d2);
  return pad2(d2.getFullYear() % 100, p2, 2);
}
function formatFullYear2(d2, p2) {
  return pad2(d2.getFullYear() % 1e4, p2, 4);
}
function formatFullYearISO2(d2, p2) {
  var day3 = d2.getDay();
  d2 = day3 >= 4 || day3 === 0 ? thursday2(d2) : thursday2.ceil(d2);
  return pad2(d2.getFullYear() % 1e4, p2, 4);
}
function formatZone2(d2) {
  var z4 = d2.getTimezoneOffset();
  return (z4 > 0 ? "-" : (z4 *= -1, "+")) + pad2(z4 / 60 | 0, "0", 2) + pad2(z4 % 60, "0", 2);
}
function formatUTCDayOfMonth2(d2, p2) {
  return pad2(d2.getUTCDate(), p2, 2);
}
function formatUTCHour242(d2, p2) {
  return pad2(d2.getUTCHours(), p2, 2);
}
function formatUTCHour122(d2, p2) {
  return pad2(d2.getUTCHours() % 12 || 12, p2, 2);
}
function formatUTCDayOfYear2(d2, p2) {
  return pad2(1 + utcDay_default2.count(utcYear_default2(d2), d2), p2, 3);
}
function formatUTCMilliseconds2(d2, p2) {
  return pad2(d2.getUTCMilliseconds(), p2, 3);
}
function formatUTCMicroseconds2(d2, p2) {
  return formatUTCMilliseconds2(d2, p2) + "000";
}
function formatUTCMonthNumber2(d2, p2) {
  return pad2(d2.getUTCMonth() + 1, p2, 2);
}
function formatUTCMinutes2(d2, p2) {
  return pad2(d2.getUTCMinutes(), p2, 2);
}
function formatUTCSeconds2(d2, p2) {
  return pad2(d2.getUTCSeconds(), p2, 2);
}
function formatUTCWeekdayNumberMonday2(d2) {
  var dow = d2.getUTCDay();
  return dow === 0 ? 7 : dow;
}
function formatUTCWeekNumberSunday2(d2, p2) {
  return pad2(utcSunday2.count(utcYear_default2(d2) - 1, d2), p2, 2);
}
function UTCdISO2(d2) {
  var day3 = d2.getUTCDay();
  return day3 >= 4 || day3 === 0 ? utcThursday2(d2) : utcThursday2.ceil(d2);
}
function formatUTCWeekNumberISO2(d2, p2) {
  d2 = UTCdISO2(d2);
  return pad2(utcThursday2.count(utcYear_default2(d2), d2) + (utcYear_default2(d2).getUTCDay() === 4), p2, 2);
}
function formatUTCWeekdayNumberSunday2(d2) {
  return d2.getUTCDay();
}
function formatUTCWeekNumberMonday2(d2, p2) {
  return pad2(utcMonday2.count(utcYear_default2(d2) - 1, d2), p2, 2);
}
function formatUTCYear2(d2, p2) {
  return pad2(d2.getUTCFullYear() % 100, p2, 2);
}
function formatUTCYearISO2(d2, p2) {
  d2 = UTCdISO2(d2);
  return pad2(d2.getUTCFullYear() % 100, p2, 2);
}
function formatUTCFullYear2(d2, p2) {
  return pad2(d2.getUTCFullYear() % 1e4, p2, 4);
}
function formatUTCFullYearISO2(d2, p2) {
  var day3 = d2.getUTCDay();
  d2 = day3 >= 4 || day3 === 0 ? utcThursday2(d2) : utcThursday2.ceil(d2);
  return pad2(d2.getUTCFullYear() % 1e4, p2, 4);
}
function formatUTCZone2() {
  return "+0000";
}
function formatLiteralPercent2() {
  return "%";
}
function formatUnixTimestamp2(d2) {
  return +d2;
}
function formatUnixTimestampSeconds2(d2) {
  return Math.floor(+d2 / 1e3);
}

// node_modules/@nivo/scales/node_modules/d3-time-format/src/defaultLocale.js
var locale3;
var timeFormat2;
var timeParse2;
var utcFormat2;
var utcParse2;
defaultLocale3({
  dateTime: "%x, %X",
  date: "%-m/%-d/%Y",
  time: "%-I:%M:%S %p",
  periods: ["AM", "PM"],
  days: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
  shortDays: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
  months: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
  shortMonths: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"]
});
function defaultLocale3(definition) {
  locale3 = formatLocale2(definition);
  timeFormat2 = locale3.format;
  timeParse2 = locale3.parse;
  utcFormat2 = locale3.utcFormat;
  utcParse2 = locale3.utcParse;
  return locale3;
}

// node_modules/@nivo/scales/node_modules/d3-time-format/src/isoFormat.js
var isoSpecifier2 = "%Y-%m-%dT%H:%M:%S.%LZ";
function formatIsoNative2(date) {
  return date.toISOString();
}
var formatIso2 = Date.prototype.toISOString ? formatIsoNative2 : utcFormat2(isoSpecifier2);

// node_modules/@nivo/scales/node_modules/d3-time-format/src/isoParse.js
function parseIsoNative2(string) {
  var date = new Date(string);
  return isNaN(date) ? null : date;
}
var parseIso2 = +/* @__PURE__ */ new Date("2000-01-01T00:00:00.000Z") ? parseIsoNative2 : utcParse2(isoSpecifier2);

// node_modules/@nivo/scales/dist/nivo-scales.mjs
var L2 = [function(n5) {
  return n5.setMilliseconds(0);
}, function(n5) {
  return n5.setSeconds(0);
}, function(n5) {
  return n5.setMinutes(0);
}, function(n5) {
  return n5.setHours(0);
}, function(n5) {
  return n5.setDate(1);
}, function(n5) {
  return n5.setMonth(0);
}];
var Q = { millisecond: [], second: L2.slice(0, 1), minute: L2.slice(0, 2), hour: L2.slice(0, 3), day: L2.slice(0, 4), month: L2.slice(0, 5), year: L2.slice(0, 6) };
var W = function(n5) {
  return function(t5) {
    return Q[n5].forEach(function(n6) {
      n6(t5);
    }), t5;
  };
};
var X = function(n5) {
  var t5 = n5.format, e7 = void 0 === t5 ? "native" : t5, r4 = n5.precision, i5 = void 0 === r4 ? "millisecond" : r4, u = n5.useUTC, c = void 0 === u || u, s = W(i5);
  return function(n6) {
    if (void 0 === n6) return n6;
    if ("native" === e7 || n6 instanceof Date) return s(n6);
    var t6 = c ? utcParse2(e7) : timeParse2(e7);
    return s(t6(n6));
  };
};
var Y = { type: "linear", min: 0, max: "auto", stacked: false, reverse: false, clamp: false, nice: true, round: false };
var Z = function(n5, t5, e7, r4) {
  var i5, a4, o4, c, s = n5.min, d2 = void 0 === s ? Y.min : s, m2 = n5.max, f = void 0 === m2 ? Y.max : m2, l2 = n5.stacked, y = void 0 === l2 ? Y.stacked : l2, h = n5.reverse, g2 = void 0 === h ? Y.reverse : h, x2 = n5.clamp, k2 = void 0 === x2 ? Y.clamp : x2, T5 = n5.nice, b4 = void 0 === T5 ? Y.nice : T5, M3 = n5.round, w4 = void 0 === M3 ? Y.round : M3;
  "auto" === d2 ? i5 = true === y ? null != (a4 = t5.minStacked) ? a4 : 0 : t5.min : i5 = d2;
  "auto" === f ? o4 = true === y ? null != (c = t5.maxStacked) ? c : 0 : t5.max : o4 = f;
  var E4 = linear().range("x" === r4 ? [0, e7] : [e7, 0]).interpolate(w4 ? round_default : number_default).domain(g2 ? [o4, i5] : [i5, o4]).clamp(k2);
  return true === b4 ? E4.nice() : "number" == typeof b4 && E4.nice(b4), _(E4, y);
};
var _ = function(n5, t5) {
  void 0 === t5 && (t5 = false);
  var e7 = n5;
  return e7.type = "linear", e7.stacked = t5, e7;
};
var nn = function(n5, t5, e7) {
  var r4 = point().range([0, e7]).domain(t5.all);
  return r4.type = "point", r4;
};
var en = { type: "band", round: false };
var rn = function(n5, t5, e7, r4) {
  var i5 = n5.round, a4 = void 0 === i5 ? en.round : i5, o4 = band().range("x" === r4 ? [0, e7] : [e7, 0]).domain(t5.all).round(a4);
  return an(o4);
};
var an = function(n5) {
  var t5 = n5;
  return t5.type = "band", t5;
};
var on = { type: "time", format: "native", precision: "millisecond", min: "auto", max: "auto", useUTC: true, nice: false };
var un = function(n5, t5, e7) {
  var r4, i5, a4 = n5.format, o4 = void 0 === a4 ? on.format : a4, u = n5.precision, c = void 0 === u ? on.precision : u, s = n5.min, f = void 0 === s ? on.min : s, l2 = n5.max, v2 = void 0 === l2 ? on.max : l2, p2 = n5.useUTC, y = void 0 === p2 ? on.useUTC : p2, h = n5.nice, g2 = void 0 === h ? on.nice : h, x2 = X({ format: o4, precision: c, useUTC: y });
  r4 = "auto" === f ? x2(t5.min) : "native" !== o4 ? x2(f) : f, i5 = "auto" === v2 ? x2(t5.max) : "native" !== o4 ? x2(v2) : v2;
  var k2 = y ? utcTime() : time();
  k2.range([0, e7]), r4 && i5 && k2.domain([r4, i5]), true === g2 ? k2.nice() : "object" != typeof g2 && "number" != typeof g2 || k2.nice(g2);
  var T5 = k2;
  return T5.type = "time", T5.useUTC = y, T5;
};
var cn2 = { type: "log", base: 10, min: "auto", max: "auto", round: false, reverse: false, nice: true };
var sn = function(n5, t5, e7, r4) {
  var i5, a4 = n5.base, o4 = void 0 === a4 ? cn2.base : a4, u = n5.min, c = void 0 === u ? cn2.min : u, s = n5.max, d2 = void 0 === s ? cn2.max : s, m2 = n5.round, l2 = void 0 === m2 ? cn2.round : m2, v2 = n5.reverse, p2 = void 0 === v2 ? cn2.reverse : v2, y = n5.nice, h = void 0 === y ? cn2.nice : y;
  if (t5.all.some(function(n6) {
    return 0 === n6;
  })) throw new Error("a log scale domain must not include or cross zero");
  var g2, x2, k2 = false;
  if (t5.all.filter(function(n6) {
    return null != n6;
  }).forEach(function(n6) {
    k2 || (void 0 === i5 ? i5 = Math.sign(n6) : Math.sign(n6) !== i5 && (k2 = true));
  }), k2) throw new Error("a log scale domain must be strictly-positive or strictly-negative");
  g2 = "auto" === c ? t5.min : c, x2 = "auto" === d2 ? t5.max : d2;
  var T5 = log().base(o4), b4 = "x" === r4 ? [0, e7] : [e7, 0];
  true === l2 ? T5.rangeRound(b4) : T5.range(b4), true === p2 ? T5.domain([x2, g2]) : T5.domain([g2, x2]), true === h ? T5.nice() : "number" == typeof h && T5.nice(h);
  var M3 = T5;
  return M3.type = "log", M3;
};
var dn = { type: "symlog", constant: 1, min: "auto", max: "auto", round: false, reverse: false, nice: true };
var mn = function(n5, t5, e7, r4) {
  var i5, a4, o4 = n5.constant, u = void 0 === o4 ? dn.constant : o4, c = n5.min, s = void 0 === c ? dn.min : c, d2 = n5.max, m2 = void 0 === d2 ? dn.max : d2, f = n5.round, v2 = void 0 === f ? dn.round : f, p2 = n5.reverse, y = void 0 === p2 ? dn.reverse : p2, h = n5.nice, g2 = void 0 === h ? dn.nice : h;
  i5 = "auto" === s ? t5.min : s, a4 = "auto" === m2 ? t5.max : m2;
  var x2 = symlog().constant(u), k2 = "x" === r4 ? [0, e7] : [e7, 0];
  true === v2 ? x2.rangeRound(k2) : x2.range(k2), true === y ? x2.domain([a4, i5]) : x2.domain([i5, a4]), true === g2 ? x2.nice() : "number" == typeof g2 && x2.nice(g2);
  var T5 = x2;
  return T5.type = "symlog", T5;
};
function pn(n5, t5, e7, r4) {
  switch (n5.type) {
    case "linear":
      return Z(n5, t5, e7, r4);
    case "point":
      return nn(0, t5, e7);
    case "band":
      return rn(n5, t5, e7, r4);
    case "time":
      return un(n5, t5, e7);
    case "log":
      return sn(n5, t5, e7, r4);
    case "symlog":
      return mn(n5, t5, e7, r4);
    default:
      throw new Error("invalid scale spec");
  }
}
var Mn2 = function(n5) {
  var t5 = n5.bandwidth();
  if (0 === t5) return n5;
  var e7 = t5 / 2;
  return n5.round() && (e7 = Math.round(e7)), function(t6) {
    var r4;
    return (null != (r4 = n5(t6)) ? r4 : 0) + e7;
  };
};
var wn2 = { millisecond: [millisecond_default2, millisecond_default2], second: [second_default2, second_default2], minute: [minute_default2, utcMinute_default2], hour: [hour_default2, utcHour_default2], day: [newInterval2(function(n5) {
  return n5.setHours(0, 0, 0, 0);
}, function(n5, t5) {
  return n5.setDate(n5.getDate() + t5);
}, function(n5, t5) {
  return (t5.getTime() - n5.getTime()) / 864e5;
}, function(n5) {
  return Math.floor(n5.getTime() / 864e5);
}), newInterval2(function(n5) {
  return n5.setUTCHours(0, 0, 0, 0);
}, function(n5, t5) {
  return n5.setUTCDate(n5.getUTCDate() + t5);
}, function(n5, t5) {
  return (t5.getTime() - n5.getTime()) / 864e5;
}, function(n5) {
  return Math.floor(n5.getTime() / 864e5);
})], week: [sunday2, utcSunday2], sunday: [sunday2, utcSunday2], monday: [monday2, utcMonday2], tuesday: [tuesday2, utcTuesday2], wednesday: [wednesday2, utcWednesday2], thursday: [thursday2, utcThursday2], friday: [friday2, utcFriday2], saturday: [saturday2, utcSaturday2], month: [month_default2, utcMonth_default2], year: [year_default2, utcYear_default2] };
var En = Object.keys(wn2);
var Sn = new RegExp("^every\\s*(\\d+)?\\s*(" + En.join("|") + ")s?$", "i");
var Cn = function(n5, t5) {
  if (Array.isArray(t5)) return t5;
  if ("string" == typeof t5 && "useUTC" in n5) {
    var e7 = t5.match(Sn);
    if (e7) {
      var r4 = e7[1], i5 = e7[2], a4 = wn2[i5][n5.useUTC ? 1 : 0];
      if ("day" === i5) {
        var o4, u, c = n5.domain(), s = c[0], d2 = c[1], m2 = new Date(d2);
        return m2.setDate(m2.getDate() + 1), null != (o4 = null == (u = a4.every(Number(null != r4 ? r4 : 1))) ? void 0 : u.range(s, m2)) ? o4 : [];
      }
      if (void 0 === r4) return n5.ticks(a4);
      var f = a4.every(Number(r4));
      if (f) return n5.ticks(f);
    }
    throw new Error("Invalid tickValues: " + t5);
  }
  if ("ticks" in n5) {
    if (void 0 === t5) return n5.ticks();
    if ("number" == typeof (l2 = t5) && isFinite(l2) && Math.floor(l2) === l2) return n5.ticks(t5);
  }
  var l2;
  return n5.domain();
};

// node_modules/@nivo/axes/dist/nivo-axes.mjs
var import_jsx_runtime = __toESM(require_jsx_runtime(), 1);
function A() {
  return A = Object.assign ? Object.assign.bind() : function(t5) {
    for (var e7 = 1; e7 < arguments.length; e7++) {
      var i5 = arguments[e7];
      for (var n5 in i5) ({}).hasOwnProperty.call(i5, n5) && (t5[n5] = i5[n5]);
    }
    return t5;
  }, A.apply(null, arguments);
}
var T2 = function(t5) {
  var e7, i5 = t5.axis, n5 = t5.scale, r4 = t5.ticksPosition, o4 = t5.tickValues, l2 = t5.tickSize, c = t5.tickPadding, s = t5.tickRotation, f = t5.truncateTickAt, d2 = t5.engine, u = void 0 === d2 ? "svg" : d2, x2 = Cn(n5, o4), m2 = gt[u], y = "bandwidth" in n5 ? Mn2(n5) : n5, g2 = { lineX: 0, lineY: 0 }, v2 = { textX: 0, textY: 0 }, k2 = "object" == typeof document && "rtl" === document.dir, b4 = m2.align.center, P3 = m2.baseline.center;
  "x" === i5 ? (e7 = function(t6) {
    var e8;
    return { x: null != (e8 = y(t6)) ? e8 : 0, y: 0 };
  }, g2.lineY = l2 * ("after" === r4 ? 1 : -1), v2.textY = (l2 + c) * ("after" === r4 ? 1 : -1), P3 = "after" === r4 ? m2.baseline.top : m2.baseline.bottom, 0 === s ? b4 = m2.align.center : "after" === r4 && s < 0 || "before" === r4 && s > 0 ? (b4 = m2.align[k2 ? "left" : "right"], P3 = m2.baseline.center) : ("after" === r4 && s > 0 || "before" === r4 && s < 0) && (b4 = m2.align[k2 ? "right" : "left"], P3 = m2.baseline.center)) : (e7 = function(t6) {
    var e8;
    return { x: 0, y: null != (e8 = y(t6)) ? e8 : 0 };
  }, g2.lineX = l2 * ("after" === r4 ? 1 : -1), v2.textX = (l2 + c) * ("after" === r4 ? 1 : -1), b4 = "after" === r4 ? m2.align.left : m2.align.right);
  return { ticks: x2.map(function(t6) {
    var i6 = "string" == typeof t6 ? function(t7) {
      var e8 = String(t7).length;
      return f && f > 0 && e8 > f ? "" + String(t7).slice(0, f).concat("...") : "" + t7;
    }(t6) : t6;
    return A({ key: t6 instanceof Date ? "" + t6.valueOf() : "" + t6, value: i6 }, e7(t6), g2, v2);
  }), textAlign: b4, textBaseline: P3 };
};
var w2 = function(t5, e7) {
  if (void 0 === t5 || "function" == typeof t5) return t5;
  if ("time" === e7.type) {
    var i5 = timeFormat(t5);
    return function(t6) {
      return i5(t6 instanceof Date ? t6 : new Date(t6));
    };
  }
  return format(t5);
};
var O = function(t5) {
  var e7, i5 = t5.width, n5 = t5.height, r4 = t5.scale, a4 = t5.axis, o4 = t5.values, l2 = (e7 = o4, Array.isArray(e7) ? o4 : void 0) || Cn(r4, o4), c = "bandwidth" in r4 ? Mn2(r4) : r4, s = "x" === a4 ? l2.map(function(t6) {
    var e8, i6;
    return { key: t6 instanceof Date ? "" + t6.valueOf() : "" + t6, x1: null != (e8 = c(t6)) ? e8 : 0, x2: null != (i6 = c(t6)) ? i6 : 0, y1: 0, y2: n5 };
  }) : l2.map(function(t6) {
    var e8, n6;
    return { key: t6 instanceof Date ? "" + t6.valueOf() : "" + t6, x1: 0, x2: i5, y1: null != (e8 = c(t6)) ? e8 : 0, y2: null != (n6 = c(t6)) ? n6 : 0 };
  });
  return s;
};
var X2 = (0, import_react.memo)(function(t5) {
  var e7, n5 = t5.value, r4 = t5.format, a4 = t5.lineX, o4 = t5.lineY, l2 = t5.onClick, c = t5.textBaseline, s = t5.textAnchor, f = t5.theme, u = t5.animatedProps, x2 = null != (e7 = null == r4 ? void 0 : r4(n5)) ? e7 : n5, y = (0, import_react.useMemo)(function() {
    var t6 = { opacity: u.opacity };
    return l2 ? { style: A({}, t6, { cursor: "pointer" }), onClick: function(t7) {
      return l2(t7, x2);
    } } : { style: t6 };
  }, [u.opacity, l2, x2]);
  return (0, import_jsx_runtime.jsxs)(animated.g, A({ transform: u.transform }, y, { children: [(0, import_jsx_runtime.jsx)("line", { x1: 0, x2: a4, y1: 0, y2: o4, style: f.line }), (0, import_jsx_runtime.jsx)(b, { dominantBaseline: c, textAnchor: s, transform: u.textTransform, style: f.text, children: "" + x2 })] }));
});
var Y2 = { tickSize: 5, tickPadding: 5, tickRotation: 0, legendPosition: "middle", legendOffset: 0 };
var B = function(e7) {
  var r4 = e7.axis, a4 = e7.scale, l2 = e7.x, f = void 0 === l2 ? 0 : l2, u = e7.y, x2 = void 0 === u ? 0 : u, v2 = e7.length, k2 = e7.ticksPosition, h = e7.tickValues, p2 = e7.tickSize, O3 = void 0 === p2 ? Y2.tickSize : p2, B2 = e7.tickPadding, z4 = void 0 === B2 ? Y2.tickPadding : B2, R4 = e7.tickRotation, V3 = void 0 === R4 ? Y2.tickRotation : R4, C3 = e7.format, D3 = e7.renderTick, j3 = void 0 === D3 ? X2 : D3, E4 = e7.truncateTickAt, W4 = e7.legend, q3 = e7.legendPosition, H2 = void 0 === q3 ? Y2.legendPosition : q3, I2 = e7.legendOffset, F = void 0 === I2 ? Y2.legendOffset : I2, G = e7.style, J3 = e7.onClick, K = e7.ariaHidden, L4 = M(), M3 = w(L4.axis, G), N = (0, import_react.useMemo)(function() {
    return w2(C3, a4);
  }, [C3, a4]), Q3 = T2({ axis: r4, scale: a4, ticksPosition: k2, tickValues: h, tickSize: O3, tickPadding: z4, tickRotation: V3, truncateTickAt: E4 }), U2 = Q3.ticks, Z3 = Q3.textAlign, $2 = Q3.textBaseline, _2 = null;
  if (void 0 !== W4) {
    var tt, et = 0, it = 0, nt = 0;
    "y" === r4 ? (nt = -90, et = F, "start" === H2 ? (tt = "start", it = v2) : "middle" === H2 ? (tt = "middle", it = v2 / 2) : "end" === H2 && (tt = "end")) : (it = F, "start" === H2 ? tt = "start" : "middle" === H2 ? (tt = "middle", et = v2 / 2) : "end" === H2 && (tt = "end", et = v2)), _2 = (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: (0, import_jsx_runtime.jsx)(b, { transform: "translate(" + et + ", " + it + ") rotate(" + nt + ")", textAnchor: tt, style: A({}, M3.legend.text, { dominantBaseline: "central" }), children: W4 }) });
  }
  var rt = Dr(), at = rt.animate, ot = rt.config, lt = useSpring({ transform: "translate(" + f + "," + x2 + ")", lineX2: "x" === r4 ? v2 : 0, lineY2: "x" === r4 ? 0 : v2, config: ot, immediate: !at }), ct2 = (0, import_react.useCallback)(function(t5) {
    return { opacity: 1, transform: "translate(" + t5.x + "," + t5.y + ")", textTransform: "translate(" + t5.textX + "," + t5.textY + ") rotate(" + V3 + ")" };
  }, [V3]), st = (0, import_react.useCallback)(function(t5) {
    return { opacity: 0, transform: "translate(" + t5.x + "," + t5.y + ")", textTransform: "translate(" + t5.textX + "," + t5.textY + ") rotate(" + V3 + ")" };
  }, [V3]), ft2 = useTransition(U2, { keys: function(t5) {
    return t5.key;
  }, initial: ct2, from: st, enter: ct2, update: ct2, leave: { opacity: 0 }, config: ot, immediate: !at });
  return (0, import_jsx_runtime.jsxs)(animated.g, { transform: lt.transform, "aria-hidden": K, children: [ft2(function(e8, i5, n5, r5) {
    return t2.createElement(j3, A({ tickIndex: r5, format: N, rotate: V3, textBaseline: $2, textAnchor: Z3, truncateTickAt: E4, animatedProps: e8, theme: M3.ticks }, i5, J3 ? { onClick: J3 } : {}));
  }), (0, import_jsx_runtime.jsx)(animated.line, { style: M3.domain.line, x1: 0, x2: lt.lineX2, y1: 0, y2: lt.lineY2 }), _2] });
};
var z2 = (0, import_react.memo)(B);
var R2 = ["top", "right", "bottom", "left"];
var V = (0, import_react.memo)(function(t5) {
  var e7 = t5.xScale, i5 = t5.yScale, n5 = t5.width, r4 = t5.height, a4 = { top: t5.top, right: t5.right, bottom: t5.bottom, left: t5.left };
  return (0, import_jsx_runtime.jsx)(import_jsx_runtime.Fragment, { children: R2.map(function(t6) {
    var o4 = a4[t6];
    if (!o4) return null;
    var l2 = "top" === t6 || "bottom" === t6;
    return (0, import_jsx_runtime.jsx)(z2, A({}, o4, { axis: l2 ? "x" : "y", x: "right" === t6 ? n5 : 0, y: "bottom" === t6 ? r4 : 0, scale: l2 ? e7 : i5, length: l2 ? n5 : r4, ticksPosition: "top" === t6 || "left" === t6 ? "before" : "after", truncateTickAt: o4.truncateTickAt }), t6);
  }) });
});
var C = (0, import_react.memo)(function(t5) {
  var e7 = t5.animatedProps, i5 = M();
  return (0, import_jsx_runtime.jsx)(animated.line, A({}, e7, i5.grid.line));
});
var D = (0, import_react.memo)(function(t5) {
  var e7 = t5.lines, i5 = Dr(), n5 = i5.animate, a4 = i5.config, l2 = useTransition(e7, { keys: function(t6) {
    return t6.key;
  }, initial: function(t6) {
    return { opacity: 1, x1: t6.x1, x2: t6.x2, y1: t6.y1, y2: t6.y2 };
  }, from: function(t6) {
    return { opacity: 0, x1: t6.x1, x2: t6.x2, y1: t6.y1, y2: t6.y2 };
  }, enter: function(t6) {
    return { opacity: 1, x1: t6.x1, x2: t6.x2, y1: t6.y1, y2: t6.y2 };
  }, update: function(t6) {
    return { opacity: 1, x1: t6.x1, x2: t6.x2, y1: t6.y1, y2: t6.y2 };
  }, leave: { opacity: 0 }, config: a4, immediate: !n5 });
  return (0, import_jsx_runtime.jsx)("g", { children: l2(function(t6, e8) {
    return (0, import_react.createElement)(C, A({}, e8, { key: e8.key, animatedProps: t6 }));
  }) });
});
var j = (0, import_react.memo)(function(t5) {
  var e7 = t5.width, n5 = t5.height, r4 = t5.xScale, a4 = t5.yScale, o4 = t5.xValues, l2 = t5.yValues, c = (0, import_react.useMemo)(function() {
    return !!r4 && O({ width: e7, height: n5, scale: r4, axis: "x", values: o4 });
  }, [r4, o4, e7, n5]), s = (0, import_react.useMemo)(function() {
    return !!a4 && O({ width: e7, height: n5, scale: a4, axis: "y", values: l2 });
  }, [n5, e7, a4, l2]);
  return (0, import_jsx_runtime.jsxs)(import_jsx_runtime.Fragment, { children: [c && (0, import_jsx_runtime.jsx)(D, { lines: c }), s && (0, import_jsx_runtime.jsx)(D, { lines: s })] });
});
var E2 = function(t5, e7) {
  var i5, n5, r4 = e7.axis, a4 = e7.scale, o4 = e7.x, c = void 0 === o4 ? 0 : o4, s = e7.y, d2 = void 0 === s ? 0 : s, m2 = e7.length, y = e7.ticksPosition, g2 = e7.tickValues, v2 = e7.tickSize, k2 = void 0 === v2 ? Y2.tickSize : v2, h = e7.tickPadding, p2 = void 0 === h ? Y2.tickPadding : h, b4 = e7.tickRotation, P3 = void 0 === b4 ? Y2.tickRotation : b4, S3 = e7.format, A2 = e7.legend, w4 = e7.legendPosition, O3 = void 0 === w4 ? Y2.legendPosition : w4, X3 = e7.legendOffset, B2 = void 0 === X3 ? Y2.legendOffset : X3, z4 = e7.theme, R4 = e7.style, V3 = T2({ axis: r4, scale: a4, ticksPosition: y, tickValues: g2, tickSize: k2, tickPadding: p2, tickRotation: P3, engine: "canvas" }), C3 = V3.ticks, D3 = V3.textAlign, j3 = V3.textBaseline;
  t5.save(), t5.translate(c, d2);
  var E4 = R(z4.axis, R4);
  t5.textAlign = D3, t5.textBaseline = j3, a(t5, E4.ticks.text);
  var W4 = null != (i5 = E4.domain.line.strokeWidth) ? i5 : 0;
  "string" != typeof W4 && W4 > 0 && (t5.lineWidth = W4, t5.lineCap = "square", E4.domain.line.stroke && (t5.strokeStyle = E4.domain.line.stroke), t5.beginPath(), t5.moveTo(0, 0), t5.lineTo("x" === r4 ? m2 : 0, "x" === r4 ? 0 : m2), t5.stroke());
  var q3 = "function" == typeof S3 ? S3 : function(t6) {
    return "" + t6;
  }, H2 = null != (n5 = E4.ticks.line.strokeWidth) ? n5 : 0, I2 = "string" != typeof H2 && H2 > 0;
  if (C3.forEach(function(e8) {
    I2 && (t5.lineWidth = H2, t5.lineCap = "square", E4.ticks.line.stroke && (t5.strokeStyle = E4.ticks.line.stroke), t5.beginPath(), t5.moveTo(e8.x, e8.y), t5.lineTo(e8.x + e8.lineX, e8.y + e8.lineY), t5.stroke());
    var i6 = q3(e8.value);
    t5.save(), t5.translate(e8.x + e8.textX, e8.y + e8.textY), t5.rotate(ut(P3)), d(t5, E4.ticks.text, "" + i6), t5.fillText("" + i6, 0, 0), t5.restore();
  }), void 0 !== A2) {
    var F = 0, G = 0, J3 = 0, K = "center";
    "y" === r4 ? (J3 = -90, F = B2, "start" === O3 ? (K = "start", G = m2) : "middle" === O3 ? (K = "center", G = m2 / 2) : "end" === O3 && (K = "end")) : (G = B2, "start" === O3 ? K = "start" : "middle" === O3 ? (K = "center", F = m2 / 2) : "end" === O3 && (K = "end", F = m2)), t5.translate(F, G), t5.rotate(ut(J3)), a(t5, E4.legend.text), E4.legend.text.fill && (t5.fillStyle = E4.legend.text.fill), t5.textAlign = K, t5.textBaseline = "middle", d(t5, E4.legend.text, A2);
  }
  t5.restore();
};
var W2 = function(t5, e7) {
  var i5 = e7.xScale, n5 = e7.yScale, r4 = e7.width, a4 = e7.height, o4 = e7.top, l2 = e7.right, c = e7.bottom, s = e7.left, f = e7.theme, d2 = { top: o4, right: l2, bottom: c, left: s };
  R2.forEach(function(e8) {
    var o5 = d2[e8];
    if (!o5) return null;
    var l3 = "top" === e8 || "bottom" === e8, c2 = "top" === e8 || "left" === e8 ? "before" : "after", s2 = l3 ? i5 : n5, u = w2(o5.format, s2);
    E2(t5, A({}, o5, { axis: l3 ? "x" : "y", x: "right" === e8 ? r4 : 0, y: "bottom" === e8 ? a4 : 0, scale: s2, format: u, length: l3 ? r4 : a4, ticksPosition: c2, theme: f }));
  });
};
var q = function(t5, e7) {
  var i5 = e7.width, n5 = e7.height, r4 = e7.scale, a4 = e7.axis, o4 = e7.values;
  O({ width: i5, height: n5, scale: r4, axis: a4, values: o4 }).forEach(function(e8) {
    t5.beginPath(), t5.moveTo(e8.x1, e8.y1), t5.lineTo(e8.x2, e8.y2), t5.stroke();
  });
};

// node_modules/@nivo/annotations/dist/nivo-annotations.mjs
var import_react2 = __toESM(require_react(), 1);
var import_filter2 = __toESM(require_filter(), 1);
var import_isNumber = __toESM(require_isNumber(), 1);
var import_omit = __toESM(require_omit(), 1);
var import_jsx_runtime2 = __toESM(require_jsx_runtime(), 1);
function g() {
  return g = Object.assign ? Object.assign.bind() : function(t5) {
    for (var n5 = 1; n5 < arguments.length; n5++) {
      var i5 = arguments[n5];
      for (var o4 in i5) ({}).hasOwnProperty.call(i5, o4) && (t5[o4] = i5[o4]);
    }
    return t5;
  }, g.apply(null, arguments);
}
var k = { dotSize: 4, noteWidth: 120, noteTextOffset: 8, animate: true };
var W3 = function(n5) {
  var i5 = typeof n5;
  return (0, import_react2.isValidElement)(n5) || "string" === i5 || "function" === i5 || "object" === i5;
};
var v = function(t5) {
  var n5 = typeof t5;
  return "string" === n5 || "function" === n5;
};
var b3 = function(t5) {
  return "circle" === t5.type;
};
var w3 = function(t5) {
  return "dot" === t5.type;
};
var z3 = function(t5) {
  return "rect" === t5.type;
};
var P2 = function(t5) {
  var n5 = t5.data, i5 = t5.annotations, e7 = t5.getPosition, r4 = t5.getDimensions;
  return i5.reduce(function(t6, i6) {
    var s = i6.offset || 0;
    return [].concat(t6, (0, import_filter2.default)(n5, i6.match).map(function(t7) {
      var n6 = e7(t7), o4 = r4(t7);
      return (b3(i6) || z3(i6)) && (o4.size = o4.size + 2 * s, o4.width = o4.width + 2 * s, o4.height = o4.height + 2 * s), g({}, (0, import_omit.default)(i6, ["match", "offset"]), n6, o4, { size: i6.size || o4.size, datum: t7 });
    }));
  }, []);
};
var C2 = function(t5, n5, i5, o4) {
  var e7 = Math.atan2(o4 - n5, i5 - t5);
  return ht(ct(e7));
};
var S2 = function(t5) {
  var n5, i5, o4 = t5.x, a4 = t5.y, r4 = t5.noteX, s = t5.noteY, h = t5.noteWidth, d2 = void 0 === h ? k.noteWidth : h, c = t5.noteTextOffset, f = void 0 === c ? k.noteTextOffset : c;
  if ((0, import_isNumber.default)(r4)) n5 = o4 + r4;
  else {
    if (void 0 === r4.abs) throw new Error("noteX should be either a number or an object containing an 'abs' property");
    n5 = r4.abs;
  }
  if ((0, import_isNumber.default)(s)) i5 = a4 + s;
  else {
    if (void 0 === s.abs) throw new Error("noteY should be either a number or an object containing an 'abs' property");
    i5 = s.abs;
  }
  var y = o4, x2 = a4, m2 = C2(o4, a4, n5, i5);
  if (b3(t5)) {
    var p2 = ft(ut(m2), t5.size / 2);
    y += p2.x, x2 += p2.y;
  }
  if (z3(t5)) {
    var g2 = Math.round((m2 + 90) / 45) % 8;
    0 === g2 && (x2 -= t5.height / 2), 1 === g2 && (y += t5.width / 2, x2 -= t5.height / 2), 2 === g2 && (y += t5.width / 2), 3 === g2 && (y += t5.width / 2, x2 += t5.height / 2), 4 === g2 && (x2 += t5.height / 2), 5 === g2 && (y -= t5.width / 2, x2 += t5.height / 2), 6 === g2 && (y -= t5.width / 2), 7 === g2 && (y -= t5.width / 2, x2 -= t5.height / 2);
  }
  var W4 = n5, v2 = n5;
  return (m2 + 90) % 360 > 180 ? (W4 -= d2, v2 -= d2) : v2 += d2, { points: [[y, x2], [n5, i5], [v2, i5]], text: [W4, i5 - f], angle: m2 + 90 };
};
var O2 = function(t5) {
  var i5 = t5.data, o4 = t5.annotations, e7 = t5.getPosition, a4 = t5.getDimensions;
  return (0, import_react2.useMemo)(function() {
    return P2({ data: i5, annotations: o4, getPosition: e7, getDimensions: a4 });
  }, [i5, o4, e7, a4]);
};
var j2 = function(t5) {
  var i5 = t5.annotations;
  return (0, import_react2.useMemo)(function() {
    return i5.map(function(t6) {
      return g({}, t6, { computed: S2(g({}, t6)) });
    });
  }, [i5]);
};
var M2 = function(t5) {
  return (0, import_react2.useMemo)(function() {
    return S2(t5);
  }, [t5]);
};
var T3 = function(t5) {
  var n5 = t5.datum, o4 = t5.x, e7 = t5.y, r4 = t5.note, s = M(), l2 = Dr(), u = l2.animate, d2 = l2.config, k2 = useSpring({ x: o4, y: e7, config: d2, immediate: !u });
  return "function" == typeof r4 ? (0, import_react2.createElement)(r4, { x: o4, y: e7, datum: n5 }) : (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [s.annotations.text.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated.text, { x: k2.x, y: k2.y, style: g({}, s.annotations.text, { strokeLinejoin: "round", strokeWidth: 2 * s.annotations.text.outlineWidth, stroke: s.annotations.text.outlineColor }), children: r4 }), (0, import_jsx_runtime2.jsx)(animated.text, { x: k2.x, y: k2.y, style: (0, import_omit.default)(s.annotations.text, ["outlineWidth", "outlineColor"]), children: r4 })] });
};
var E3 = function(t5) {
  var i5 = t5.points, o4 = t5.isOutline, e7 = void 0 !== o4 && o4, a4 = M(), r4 = (0, import_react2.useMemo)(function() {
    var t6 = i5[0];
    return i5.slice(1).reduce(function(t7, n5) {
      return t7 + " L" + n5[0] + "," + n5[1];
    }, "M" + t6[0] + "," + t6[1]);
  }, [i5]), s = It(r4);
  if (e7 && a4.annotations.link.outlineWidth <= 0) return null;
  var l2 = g({}, a4.annotations.link);
  return e7 && (l2.strokeLinecap = "square", l2.strokeWidth = a4.annotations.link.strokeWidth + 2 * a4.annotations.link.outlineWidth, l2.stroke = a4.annotations.link.outlineColor, l2.opacity = a4.annotations.link.outlineOpacity), (0, import_jsx_runtime2.jsx)(animated.path, { fill: "none", d: s, style: l2 });
};
var I = function(t5) {
  var n5 = t5.x, i5 = t5.y, o4 = t5.size, e7 = M(), a4 = Dr(), r4 = a4.animate, s = a4.config, l2 = useSpring({ x: n5, y: i5, radius: o4 / 2, config: s, immediate: !r4 });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [e7.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated.circle, { cx: l2.x, cy: l2.y, r: l2.radius, style: g({}, e7.annotations.outline, { fill: "none", strokeWidth: e7.annotations.outline.strokeWidth + 2 * e7.annotations.outline.outlineWidth, stroke: e7.annotations.outline.outlineColor, opacity: e7.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated.circle, { cx: l2.x, cy: l2.y, r: l2.radius, style: e7.annotations.outline })] });
};
var D2 = function(t5) {
  var n5 = t5.x, i5 = t5.y, o4 = t5.size, e7 = void 0 === o4 ? k.dotSize : o4, a4 = M(), r4 = Dr(), s = r4.animate, l2 = r4.config, u = useSpring({ x: n5, y: i5, radius: e7 / 2, config: l2, immediate: !s });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [a4.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated.circle, { cx: u.x, cy: u.y, r: u.radius, style: g({}, a4.annotations.outline, { fill: "none", strokeWidth: 2 * a4.annotations.outline.outlineWidth, stroke: a4.annotations.outline.outlineColor, opacity: a4.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated.circle, { cx: u.x, cy: u.y, r: u.radius, style: a4.annotations.symbol })] });
};
var L3 = function(t5) {
  var n5 = t5.x, i5 = t5.y, o4 = t5.width, e7 = t5.height, a4 = t5.borderRadius, r4 = void 0 === a4 ? 6 : a4, s = M(), l2 = Dr(), u = l2.animate, d2 = l2.config, k2 = useSpring({ x: n5 - o4 / 2, y: i5 - e7 / 2, width: o4, height: e7, config: d2, immediate: !u });
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [s.annotations.outline.outlineWidth > 0 && (0, import_jsx_runtime2.jsx)(animated.rect, { x: k2.x, y: k2.y, rx: r4, ry: r4, width: k2.width, height: k2.height, style: g({}, s.annotations.outline, { fill: "none", strokeWidth: s.annotations.outline.strokeWidth + 2 * s.annotations.outline.outlineWidth, stroke: s.annotations.outline.outlineColor, opacity: s.annotations.outline.outlineOpacity }) }), (0, import_jsx_runtime2.jsx)(animated.rect, { x: k2.x, y: k2.y, rx: r4, ry: r4, width: k2.width, height: k2.height, style: s.annotations.outline })] });
};
var R3 = function(t5) {
  var n5 = t5.datum, i5 = t5.x, o4 = t5.y, e7 = t5.note, a4 = M2(t5);
  if (!W3(e7)) throw new Error("note should be a valid react element");
  return (0, import_jsx_runtime2.jsxs)(import_jsx_runtime2.Fragment, { children: [(0, import_jsx_runtime2.jsx)(E3, { points: a4.points, isOutline: true }), b3(t5) && (0, import_jsx_runtime2.jsx)(I, { x: i5, y: o4, size: t5.size }), w3(t5) && (0, import_jsx_runtime2.jsx)(D2, { x: i5, y: o4, size: t5.size }), z3(t5) && (0, import_jsx_runtime2.jsx)(L3, { x: i5, y: o4, width: t5.width, height: t5.height, borderRadius: t5.borderRadius }), (0, import_jsx_runtime2.jsx)(E3, { points: a4.points }), (0, import_jsx_runtime2.jsx)(T3, { datum: n5, x: a4.text[0], y: a4.text[1], note: e7 })] });
};
var q2 = function(t5, n5) {
  n5.forEach(function(n6, i5) {
    var o4 = n6[0], e7 = n6[1];
    0 === i5 ? t5.moveTo(o4, e7) : t5.lineTo(o4, e7);
  });
};
var J = function(t5, n5) {
  var i5 = n5.annotations, o4 = n5.theme;
  0 !== i5.length && (t5.save(), i5.forEach(function(n6) {
    if (!v(n6.note)) throw new Error("note is invalid for canvas implementation");
    o4.annotations.link.outlineWidth > 0 && (t5.lineCap = "square", t5.strokeStyle = o4.annotations.link.outlineColor, t5.lineWidth = o4.annotations.link.strokeWidth + 2 * o4.annotations.link.outlineWidth, t5.beginPath(), q2(t5, n6.computed.points), t5.stroke(), t5.lineCap = "butt"), b3(n6) && o4.annotations.outline.outlineWidth > 0 && (t5.strokeStyle = o4.annotations.outline.outlineColor, t5.lineWidth = o4.annotations.outline.strokeWidth + 2 * o4.annotations.outline.outlineWidth, t5.beginPath(), t5.arc(n6.x, n6.y, n6.size / 2, 0, 2 * Math.PI), t5.stroke()), w3(n6) && o4.annotations.symbol.outlineWidth > 0 && (t5.strokeStyle = o4.annotations.symbol.outlineColor, t5.lineWidth = 2 * o4.annotations.symbol.outlineWidth, t5.beginPath(), t5.arc(n6.x, n6.y, n6.size / 2, 0, 2 * Math.PI), t5.stroke()), z3(n6) && o4.annotations.outline.outlineWidth > 0 && (t5.strokeStyle = o4.annotations.outline.outlineColor, t5.lineWidth = o4.annotations.outline.strokeWidth + 2 * o4.annotations.outline.outlineWidth, t5.beginPath(), t5.rect(n6.x - n6.width / 2, n6.y - n6.height / 2, n6.width, n6.height), t5.stroke()), t5.strokeStyle = o4.annotations.link.stroke, t5.lineWidth = o4.annotations.link.strokeWidth, t5.beginPath(), q2(t5, n6.computed.points), t5.stroke(), b3(n6) && (t5.strokeStyle = o4.annotations.outline.stroke, t5.lineWidth = o4.annotations.outline.strokeWidth, t5.beginPath(), t5.arc(n6.x, n6.y, n6.size / 2, 0, 2 * Math.PI), t5.stroke()), w3(n6) && (t5.fillStyle = o4.annotations.symbol.fill, t5.beginPath(), t5.arc(n6.x, n6.y, n6.size / 2, 0, 2 * Math.PI), t5.fill()), z3(n6) && (t5.strokeStyle = o4.annotations.outline.stroke, t5.lineWidth = o4.annotations.outline.strokeWidth, t5.beginPath(), t5.rect(n6.x - n6.width / 2, n6.y - n6.height / 2, n6.width, n6.height), t5.stroke()), "function" == typeof n6.note ? n6.note(t5, { datum: n6.datum, x: n6.computed.text[0], y: n6.computed.text[1], theme: o4 }) : (t5.font = o4.annotations.text.fontSize + "px " + o4.annotations.text.fontFamily, t5.textAlign = "left", t5.textBaseline = "alphabetic", t5.fillStyle = o4.annotations.text.fill, t5.strokeStyle = o4.annotations.text.outlineColor, t5.lineWidth = 2 * o4.annotations.text.outlineWidth, o4.annotations.text.outlineWidth > 0 && (t5.lineJoin = "round", t5.strokeText(n6.note, n6.computed.text[0], n6.computed.text[1]), t5.lineJoin = "miter"), t5.fillText(n6.note, n6.computed.text[0], n6.computed.text[1]));
  }), t5.restore());
};

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_jsx_runtime3 = __toESM(require_jsx_runtime(), 1);

// node_modules/@nivo/canvas/dist/nivo-canvas.mjs
var o2 = function(o4, e7, r4, a4, i5, u) {
  u > 0 ? (o4.moveTo(e7 + u, r4), o4.lineTo(e7 + a4 - u, r4), o4.quadraticCurveTo(e7 + a4, r4, e7 + a4, r4 + u), o4.lineTo(e7 + a4, r4 + i5 - u), o4.quadraticCurveTo(e7 + a4, r4 + i5, e7 + a4 - u, r4 + i5), o4.lineTo(e7 + u, r4 + i5), o4.quadraticCurveTo(e7, r4 + i5, e7, r4 + i5 - u), o4.lineTo(e7, r4 + u), o4.quadraticCurveTo(e7, r4, e7 + u, r4), o4.closePath()) : o4.rect(e7, r4, a4, i5);
};

// node_modules/@nivo/bar/dist/nivo-bar.mjs
var import_uniqBy2 = __toESM(require_uniqBy(), 1);
function Q2() {
  return Q2 = Object.assign ? Object.assign.bind() : function(e7) {
    for (var t5 = 1; t5 < arguments.length; t5++) {
      var a4 = arguments[t5];
      for (var i5 in a4) ({}).hasOwnProperty.call(a4, i5) && (e7[i5] = a4[i5]);
    }
    return e7;
  }, Q2.apply(null, arguments);
}
function U(e7, t5) {
  if (null == e7) return {};
  var a4 = {};
  for (var i5 in e7) if ({}.hasOwnProperty.call(e7, i5)) {
    if (-1 !== t5.indexOf(i5)) continue;
    a4[i5] = e7[i5];
  }
  return a4;
}
var Z2;
var $ = function(e7) {
  var t5 = e7.bars, a4 = e7.annotations, i5 = O2({ data: t5, annotations: a4, getPosition: function(e8) {
    return { x: e8.x + e8.width / 2, y: e8.y + e8.height / 2 };
  }, getDimensions: function(e8) {
    var t6 = e8.height, a5 = e8.width;
    return { width: a5, height: t6, size: Math.max(a5, t6) };
  } });
  return (0, import_jsx_runtime3.jsx)(import_jsx_runtime3.Fragment, { children: i5.map(function(e8, t6) {
    return (0, import_jsx_runtime3.jsx)(R3, Q2({}, e8), t6);
  }) });
};
var ee = function(e7) {
  var t5 = e7.width, a4 = e7.height, i5 = e7.legends, n5 = e7.toggleSerie;
  return (0, import_jsx_runtime3.jsx)(import_jsx_runtime3.Fragment, { children: i5.map(function(e8, i6) {
    var l2, r4 = e8[0], o4 = e8[1];
    return (0, import_jsx_runtime3.jsx)(E, Q2({}, r4, { containerWidth: t5, containerHeight: a4, data: null != (l2 = r4.data) ? l2 : o4, toggleSerie: r4.toggleSerie && "keys" === r4.dataFrom ? n5 : void 0 }), i6);
  }) });
};
var te = ["data"];
var ae = function(i5) {
  var n5, l2 = i5.bar, r4 = l2.data, o4 = U(l2, te), d2 = i5.style, u = d2.borderColor, s = d2.color, c = d2.height, h = d2.labelColor, f = d2.labelOpacity, b4 = d2.labelX, g2 = d2.labelY, v2 = d2.transform, m2 = d2.width, p2 = d2.textAnchor, y = i5.borderRadius, x2 = i5.borderWidth, S3 = i5.label, k2 = i5.shouldRenderLabel, w4 = i5.isInteractive, L4 = i5.onClick, M3 = i5.onMouseEnter, B2 = i5.onMouseLeave, R4 = i5.tooltip, O3 = i5.isFocusable, I2 = i5.ariaLabel, T5 = i5.ariaLabelledBy, P3 = i5.ariaDescribedBy, E4 = i5.ariaDisabled, F = i5.ariaHidden, z4 = M(), X3 = z(), G = X3.showTooltipFromEvent, N = X3.showTooltipAt, j3 = X3.hideTooltip, K = (0, import_react3.useMemo)(function() {
    return function() {
      return (0, import_react3.createElement)(R4, Q2({}, o4, r4));
    };
  }, [R4, o4, r4]), _2 = (0, import_react3.useCallback)(function(e7) {
    null == L4 || L4(Q2({ color: o4.color }, r4), e7);
  }, [o4, r4, L4]), q3 = (0, import_react3.useCallback)(function(e7) {
    return G(K(), e7);
  }, [G, K]), J3 = (0, import_react3.useCallback)(function(e7) {
    null == M3 || M3(r4, e7), G(K(), e7);
  }, [r4, M3, G, K]), Z3 = (0, import_react3.useCallback)(function(e7) {
    null == B2 || B2(r4, e7), j3();
  }, [r4, j3, B2]), $2 = (0, import_react3.useCallback)(function() {
    N(K(), [o4.absX + o4.width / 2, o4.absY]);
  }, [N, K, o4]), ee2 = (0, import_react3.useCallback)(function() {
    j3();
  }, [j3]);
  return (0, import_jsx_runtime3.jsxs)(animated.g, { transform: v2, children: [(0, import_jsx_runtime3.jsx)(animated.rect, { width: to(m2, function(e7) {
    return Math.max(e7, 0);
  }), height: to(c, function(e7) {
    return Math.max(e7, 0);
  }), rx: y, ry: y, fill: null != (n5 = r4.fill) ? n5 : s, strokeWidth: x2, stroke: u, focusable: O3, tabIndex: O3 ? 0 : void 0, "aria-label": I2 ? I2(r4) : void 0, "aria-labelledby": T5 ? T5(r4) : void 0, "aria-describedby": P3 ? P3(r4) : void 0, "aria-disabled": E4 ? E4(r4) : void 0, "aria-hidden": F ? F(r4) : void 0, onMouseEnter: w4 ? J3 : void 0, onMouseMove: w4 ? q3 : void 0, onMouseLeave: w4 ? Z3 : void 0, onClick: w4 ? _2 : void 0, onFocus: w4 && O3 ? $2 : void 0, onBlur: w4 && O3 ? ee2 : void 0, "data-testid": "bar.item." + r4.id + "." + r4.index }), k2 && (0, import_jsx_runtime3.jsx)(b, { x: b4, y: g2, textAnchor: p2, dominantBaseline: "central", fillOpacity: f, style: Q2({}, z4.labels.text, { pointerEvents: "none", fill: h }), children: S3 })] });
};
var ie = ["color", "label"];
var ne = function(e7) {
  var t5 = e7.color, a4 = e7.label, i5 = U(e7, ie);
  return (0, import_jsx_runtime3.jsx)(T, { id: a4, value: i5.formattedValue, enableChip: true, color: t5 });
};
var le = { indexBy: "id", keys: ["value"], groupMode: "stacked", layout: "vertical", valueScale: { type: "linear", nice: true, round: false }, indexScale: { type: "band", round: false }, padding: 0.1, innerPadding: 0, enableGridX: false, enableGridY: true, enableLabel: true, label: "formattedValue", labelPosition: "middle", labelOffset: 0, labelSkipWidth: 0, labelSkipHeight: 0, labelTextColor: { theme: "labels.text.fill" }, colorBy: "id", colors: { scheme: "nivo" }, borderRadius: 0, borderWidth: 0, borderColor: { from: "color" }, isInteractive: true, tooltip: ne, tooltipLabel: function(e7) {
  return e7.id + " - " + e7.indexValue;
}, legends: [], initialHiddenIds: [], annotations: [], enableTotals: false, totalsOffset: 10 };
var re2 = Q2({}, le, { layers: ["grid", "axes", "bars", "totals", "markers", "legends", "annotations"], axisTop: null, axisRight: null, axisBottom: {}, axisLeft: {}, barComponent: ae, defs: [], fill: [], markers: [], animate: true, animateOnMount: false, motionConfig: "default", role: "img", isFocusable: false });
var oe = Q2({}, le, { layers: ["grid", "axes", "bars", "totals", "legends", "annotations"], axisTop: null, axisRight: null, axisBottom: {}, axisLeft: {}, renderBar: function(e7, t5) {
  var a4 = t5.bar, i5 = a4.color, n5 = a4.height, l2 = a4.width, r4 = a4.x, o4 = a4.y, d2 = t5.borderColor, u = t5.borderRadius, s = t5.borderWidth, c = t5.label, h = t5.shouldRenderLabel, f = t5.labelStyle, b4 = t5.labelX, g2 = t5.labelY, v2 = t5.textAnchor;
  e7.fillStyle = i5, s > 0 && (e7.strokeStyle = d2, e7.lineWidth = s), e7.beginPath(), o2(e7, r4, o4, l2, n5, Math.min(u, n5)), e7.fill(), s > 0 && e7.stroke(), h && (e7.textBaseline = "middle", e7.textAlign = "middle" === v2 ? "center" : v2, d(e7, f, c, r4 + b4, o4 + g2));
}, pixelRatio: "undefined" != typeof window && null != (Z2 = window.devicePixelRatio) ? Z2 : 1 });
var de = function(e7, t5, a4, i5, n5, l2) {
  return pn(i5, { all: e7.map(t5), min: 0, max: 0 }, n5, l2).padding(a4);
};
var ue = function(e7, t5) {
  return e7.map(function(e8) {
    return Q2({}, t5.reduce(function(e9, t6) {
      return e9[t6] = null, e9;
    }, {}), e8);
  });
};
var se = function(e7) {
  return Object.keys(e7).reduce(function(t5, a4) {
    return e7[a4] && (t5[a4] = e7[a4]), t5;
  }, {});
};
var ce = function(e7) {
  return [e7, Number(e7)];
};
function he(e7, t5, a4, i5) {
  return void 0 === e7 && (e7 = le.layout), void 0 === a4 && (a4 = le.labelPosition), void 0 === i5 && (i5 = le.labelOffset), function(n5, l2) {
    var r4 = i5 * (t5 ? -1 : 1);
    if ("horizontal" === e7) {
      var o4 = n5 / 2;
      return "start" === a4 ? o4 = t5 ? n5 : 0 : "end" === a4 && (o4 = t5 ? 0 : n5), { labelX: o4 + r4, labelY: l2 / 2, textAnchor: "middle" === a4 ? "middle" : t5 ? "end" : "start" };
    }
    var d2 = l2 / 2;
    return "start" === a4 ? d2 = t5 ? 0 : l2 : "end" === a4 && (d2 = t5 ? l2 : 0), { labelX: n5 / 2, labelY: d2 - r4, textAnchor: "middle" };
  };
}
var fe = ["layout", "width", "height", "padding", "innerPadding", "valueScale", "indexScale", "hiddenIds"];
var be = function(e7, t5) {
  return e7 > t5;
};
var ge = function(e7, t5) {
  return e7 < t5;
};
var ve = function(e7, t5) {
  return Array.from(" ".repeat(t5 - e7), function(t6, a4) {
    return e7 + a4;
  });
};
var me = function(e7) {
  return be(e7, 0) ? 0 : e7;
};
var pe = function(e7, t5, a4, i5) {
  var n5 = e7.data, l2 = e7.formatValue, r4 = e7.getColor, o4 = e7.getIndex, d2 = e7.getTooltipLabel, u = e7.innerPadding, s = void 0 === u ? 0 : u, c = e7.keys, h = e7.xScale, f = e7.yScale, b4 = e7.margin, g2 = a4 ? ge : be, v2 = n5.map(se), m2 = [];
  return c.forEach(function(e8, a5) {
    return ve(0, h.domain().length).forEach(function(u2) {
      var c2, p2, y, x2 = ce(n5[u2][e8]), S3 = x2[0], k2 = x2[1], w4 = o4(n5[u2]), L4 = (null != (c2 = h(w4)) ? c2 : 0) + t5 * a5 + s * a5, C3 = g2(p2 = k2, 0) ? null != (y = f(p2)) ? y : 0 : i5, W4 = function(e9, t6) {
        var a6;
        return g2(e9, 0) ? i5 - t6 : (null != (a6 = f(e9)) ? a6 : 0) - i5;
      }(k2, C3), M3 = { id: e8, value: null === S3 ? S3 : k2, formattedValue: l2(k2), hidden: false, index: u2, indexValue: w4, data: v2[u2] };
      m2.push({ key: e8 + "." + M3.indexValue, index: m2.length, data: M3, x: L4, y: C3, absX: b4.left + L4, absY: b4.top + C3, width: t5, height: W4, color: r4(M3), label: d2(M3) });
    });
  }), m2;
};
var ye = function(e7, t5, a4, i5) {
  var n5 = e7.data, l2 = e7.formatValue, r4 = e7.getIndex, o4 = e7.getColor, d2 = e7.getTooltipLabel, u = e7.keys, s = e7.innerPadding, c = void 0 === s ? 0 : s, h = e7.xScale, f = e7.yScale, b4 = e7.margin, g2 = a4 ? ge : be, v2 = n5.map(se), m2 = [];
  return u.forEach(function(e8, a5) {
    return ve(0, f.domain().length).forEach(function(u2) {
      var s2, p2, y, x2 = ce(n5[u2][e8]), S3 = x2[0], k2 = x2[1], w4 = r4(n5[u2]), L4 = g2(p2 = k2, 0) ? i5 : null != (y = h(p2)) ? y : 0, C3 = (null != (s2 = f(w4)) ? s2 : 0) + t5 * a5 + c * a5, W4 = function(e9, t6) {
        var a6;
        return g2(e9, 0) ? (null != (a6 = h(e9)) ? a6 : 0) - i5 : i5 - t6;
      }(k2, L4), M3 = { id: e8, value: null === S3 ? S3 : k2, formattedValue: l2(k2), hidden: false, index: u2, indexValue: w4, data: v2[u2] };
      m2.push({ key: e8 + "." + M3.indexValue, index: m2.length, data: M3, x: L4, y: C3, absX: b4.left + L4, absY: b4.top + C3, width: W4, height: t5, color: o4(M3), label: d2(M3) });
    });
  }), m2;
};
var xe = function(e7) {
  var t5, a4, i5, n5 = e7.layout, l2 = e7.width, r4 = e7.height, o4 = e7.padding, d2 = void 0 === o4 ? 0 : o4, u = e7.innerPadding, s = void 0 === u ? 0 : u, c = e7.valueScale, h = e7.indexScale, f = e7.hiddenIds, b4 = void 0 === f ? [] : f, g2 = U(e7, fe), v2 = g2.keys.filter(function(e8) {
    return !b4.includes(e8);
  }), m2 = ue(g2.data, v2), p2 = "vertical" === n5 ? ["y", "x", l2] : ["x", "y", r4], y = p2[0], x2 = p2[1], S3 = p2[2], k2 = de(m2, g2.getIndex, d2, h, S3, x2), w4 = "auto" === c.min ? me : function(e8) {
    return e8;
  }, L4 = m2.reduce(function(e8, t6) {
    return [].concat(e8, v2.map(function(e9) {
      return t6[e9];
    }));
  }, []).filter(Boolean), C3 = w4(Math.min.apply(Math, L4)), W4 = (i5 = Math.max.apply(Math, L4), isFinite(i5) ? i5 : 0), M3 = pn(c, { all: L4, min: C3, max: W4 }, "x" === y ? l2 : r4, y), B2 = "vertical" === n5 ? [k2, M3] : [M3, k2], R4 = B2[0], O3 = B2[1], I2 = (k2.bandwidth() - s * (v2.length - 1)) / v2.length, V3 = [Q2({}, g2, { data: m2, keys: v2, innerPadding: s, xScale: R4, yScale: O3 }), I2, null != (t5 = c.reverse) && t5, null != (a4 = M3(0)) ? a4 : 0];
  return { xScale: R4, yScale: O3, bars: I2 > 0 ? "vertical" === n5 ? pe.apply(void 0, V3) : ye.apply(void 0, V3) : [] };
};
var Se = ["data", "layout", "width", "height", "padding", "valueScale", "indexScale", "hiddenIds"];
var ke = function(e7) {
  var t5;
  return e7.some(Array.isArray) ? ke((t5 = []).concat.apply(t5, e7)) : e7;
};
var we = function(e7, t5, a4) {
  var i5 = e7.formatValue, n5 = e7.getColor, l2 = e7.getIndex, r4 = e7.getTooltipLabel, o4 = e7.innerPadding, d2 = e7.stackedData, u = e7.xScale, s = e7.yScale, c = e7.margin, h = [];
  return d2.forEach(function(e8) {
    return u.domain().forEach(function(d3, f) {
      var b4, g2, v2 = e8[f], m2 = null != (b4 = u(l2(v2.data))) ? b4 : 0, p2 = (null != (g2 = function(e9) {
        return s(e9[a4 ? 0 : 1]);
      }(v2)) ? g2 : 0) + 0.5 * o4, y = function(e9, t6) {
        var i6;
        return (null != (i6 = s(e9[a4 ? 1 : 0])) ? i6 : 0) - t6;
      }(v2, p2) - o4, x2 = ce(v2.data[e8.key]), S3 = x2[0], k2 = x2[1], w4 = { id: e8.key, value: null === S3 ? S3 : k2, formattedValue: i5(k2), hidden: false, index: f, indexValue: d3, data: se(v2.data) };
      h.push({ key: e8.key + "." + d3, index: h.length, data: w4, x: m2, y: p2, absX: c.left + m2, absY: c.top + p2, width: t5, height: y, color: n5(w4), label: r4(w4) });
    });
  }), h;
};
var Le = function(e7, t5, a4) {
  var i5 = e7.formatValue, n5 = e7.getColor, l2 = e7.getIndex, r4 = e7.getTooltipLabel, o4 = e7.innerPadding, d2 = e7.stackedData, u = e7.xScale, s = e7.yScale, c = e7.margin, h = [];
  return d2.forEach(function(e8) {
    return s.domain().forEach(function(d3, f) {
      var b4, g2, v2 = e8[f], m2 = null != (b4 = s(l2(v2.data))) ? b4 : 0, p2 = (null != (g2 = function(e9) {
        return u(e9[a4 ? 1 : 0]);
      }(v2)) ? g2 : 0) + 0.5 * o4, y = function(e9, t6) {
        var i6;
        return (null != (i6 = u(e9[a4 ? 0 : 1])) ? i6 : 0) - t6;
      }(v2, p2) - o4, x2 = ce(v2.data[e8.key]), S3 = x2[0], k2 = x2[1], w4 = { id: e8.key, value: null === S3 ? S3 : k2, formattedValue: i5(k2), hidden: false, index: f, indexValue: d3, data: se(v2.data) };
      h.push({ key: e8.key + "." + d3, index: h.length, data: w4, x: p2, y: m2, absX: c.left + p2, absY: c.top + m2, width: y, height: t5, color: n5(w4), label: r4(w4) });
    });
  }), h;
};
var Ce = function(e7) {
  var t5, a4, i5 = e7.data, n5 = e7.layout, l2 = e7.width, r4 = e7.height, o4 = e7.padding, d2 = void 0 === o4 ? 0 : o4, u = e7.valueScale, s = e7.indexScale, c = e7.hiddenIds, h = void 0 === c ? [] : c, f = U(e7, Se), b4 = f.keys.filter(function(e8) {
    return !h.includes(e8);
  }), g2 = stack_default().keys(b4).offset(diverging_default)(ue(i5, b4)), v2 = "vertical" === n5 ? ["y", "x", l2] : ["x", "y", r4], m2 = v2[0], p2 = v2[1], y = v2[2], x2 = de(i5, f.getIndex, d2, s, y, p2), S3 = (a4 = ke(g2), "log" === u.type ? a4.filter(function(e8) {
    return 0 !== e8;
  }) : a4), k2 = Math.min.apply(Math, S3), w4 = Math.max.apply(Math, S3), L4 = pn(u, { all: S3, min: k2, max: w4 }, "x" === m2 ? l2 : r4, m2), C3 = "vertical" === n5 ? [x2, L4] : [L4, x2], W4 = C3[0], M3 = C3[1], B2 = f.innerPadding > 0 ? f.innerPadding : 0, R4 = x2.bandwidth(), O3 = [Q2({}, f, { innerPadding: B2, stackedData: g2, xScale: W4, yScale: M3 }), R4, null != (t5 = u.reverse) && t5];
  return { xScale: W4, yScale: M3, bars: R4 > 0 ? "vertical" === n5 ? we.apply(void 0, O3) : Le.apply(void 0, O3) : [] };
};
var We = function(e7) {
  var t5 = e7.bars, a4 = e7.direction, i5 = e7.from, n5 = e7.groupMode, l2 = e7.layout, r4 = e7.legendLabel, o4 = e7.reverse, d2 = gn(null != r4 ? r4 : "indexes" === i5 ? "indexValue" : "id");
  return "indexes" === i5 ? function(e8, t6, a5) {
    var i6 = (0, import_uniqBy2.default)(e8.map(function(e9) {
      var t7, i7;
      return { id: null != (t7 = e9.data.indexValue) ? t7 : "", label: a5(e9.data), hidden: e9.data.hidden, color: null != (i7 = e9.color) ? i7 : "#000" };
    }), function(e9) {
      return e9.id;
    });
    return "horizontal" === t6 && i6.reverse(), i6;
  }(t5, l2, d2) : function(e8, t6, a5, i6, n6, l3) {
    var r5 = (0, import_uniqBy2.default)(e8.map(function(e9) {
      var t7;
      return { id: e9.data.id, label: l3(e9.data), hidden: e9.data.hidden, color: null != (t7 = e9.color) ? t7 : "#000" };
    }), function(e9) {
      return e9.id;
    });
    return ("vertical" === t6 && "stacked" === i6 && "column" === a5 && true !== n6 || "horizontal" === t6 && "stacked" === i6 && true === n6) && r5.reverse(), r5;
  }(t5, l2, a4, n5, o4, d2);
};
var Me = function(e7, t5, a4) {
  var i5 = e7.get(t5) || 0;
  e7.set(t5, i5 + a4);
};
var Be = function(e7, t5, a4) {
  var i5 = e7.get(t5) || 0;
  e7.set(t5, i5 + (a4 > 0 ? a4 : 0));
};
var Re = function(e7, t5, a4) {
  var i5 = e7.get(t5) || 0;
  e7.set(t5, Math.max(i5, Number(a4)));
};
var Oe = function(e7, t5) {
  var a4 = e7.get(t5) || 0;
  e7.set(t5, a4 + 1);
};
var Ie = function(t5) {
  var n5, l2 = t5.indexBy, r4 = void 0 === l2 ? le.indexBy : l2, o4 = t5.keys, d2 = void 0 === o4 ? le.keys : o4, u = t5.label, s = void 0 === u ? le.label : u, c = t5.tooltipLabel, h = void 0 === c ? le.tooltipLabel : c, g2 = t5.valueFormat, v2 = t5.colors, m2 = void 0 === v2 ? le.colors : v2, p2 = t5.colorBy, y = void 0 === p2 ? le.colorBy : p2, x2 = t5.borderColor, S3 = void 0 === x2 ? le.borderColor : x2, k2 = t5.labelTextColor, w4 = void 0 === k2 ? le.labelTextColor : k2, L4 = t5.groupMode, C3 = void 0 === L4 ? le.groupMode : L4, W4 = t5.layout, M3 = void 0 === W4 ? le.layout : W4, B2 = t5.data, R4 = t5.margin, O3 = t5.width, I2 = t5.height, V3 = t5.padding, T5 = void 0 === V3 ? le.padding : V3, H2 = t5.innerPadding, P3 = void 0 === H2 ? le.innerPadding : H2, E4 = t5.valueScale, A2 = void 0 === E4 ? le.valueScale : E4, X3 = t5.indexScale, Y3 = void 0 === X3 ? le.indexScale : X3, G = t5.initialHiddenIds, N = void 0 === G ? le.initialHiddenIds : G, j3 = t5.enableLabel, K = void 0 === j3 ? le.enableLabel : j3, _2 = t5.labelSkipWidth, q3 = void 0 === _2 ? le.labelSkipWidth : _2, J3 = t5.labelSkipHeight, U2 = void 0 === J3 ? le.labelSkipHeight : J3, Z3 = t5.legends, $2 = void 0 === Z3 ? le.legends : Z3, ee2 = t5.legendLabel, te2 = t5.totalsOffset, ae2 = void 0 === te2 ? le.totalsOffset : te2, ie2 = (0, import_react3.useState)(null != N ? N : []), ne2 = ie2[0], re3 = ie2[1], oe2 = (0, import_react3.useCallback)(function(e7) {
    re3(function(t6) {
      return t6.indexOf(e7) > -1 ? t6.filter(function(t7) {
        return t7 !== e7;
      }) : [].concat(t6, [e7]);
    });
  }, []), de2 = bn(r4), ue2 = bn(s), se2 = bn(h), ce2 = hn(g2), he2 = M(), fe2 = hr(m2, y), be2 = Ye(S3, he2), ge2 = Ye(w4, he2), ve2 = ("grouped" === C3 ? xe : Ce)({ layout: M3, data: B2, getIndex: de2, keys: d2, width: O3, height: I2, getColor: fe2, padding: T5, innerPadding: P3, valueScale: A2, indexScale: Y3, hiddenIds: ne2, formatValue: ce2, getTooltipLabel: se2, margin: R4 }), me2 = ve2.bars, pe2 = ve2.xScale, ye2 = ve2.yScale, Se2 = (0, import_react3.useMemo)(function() {
    return me2.filter(function(e7) {
      return null !== e7.data.value;
    }).map(function(e7, t6) {
      return Q2({}, e7, { index: t6 });
    });
  }, [me2]), ke2 = (0, import_react3.useCallback)(function(e7) {
    var t6 = e7.width, a4 = e7.height;
    return !!K && (!(q3 > 0 && t6 < q3) && !(U2 > 0 && a4 < U2));
  }, [K, q3, U2]), we2 = (0, import_react3.useMemo)(function() {
    return d2.map(function(e7) {
      var t6 = me2.find(function(t7) {
        return t7.data.id === e7;
      });
      return Q2({}, t6, { data: Q2({ id: e7 }, null == t6 ? void 0 : t6.data, { hidden: ne2.includes(e7) }) });
    });
  }, [ne2, d2, me2]), Le2 = null != (n5 = A2.reverse) && n5, Ie2 = (0, import_react3.useMemo)(function() {
    return $2.map(function(e7) {
      return [e7, We({ bars: "keys" === e7.dataFrom ? we2 : me2, direction: e7.direction, from: e7.dataFrom, groupMode: C3, layout: M3, legendLabel: ee2, reverse: Le2 })];
    });
  }, [$2, we2, me2, C3, M3, ee2, Le2]), Ve2 = (0, import_react3.useMemo)(function() {
    return function(e7, t6, a4, i5, n6, l3, r5) {
      void 0 === i5 && (i5 = le.layout), void 0 === n6 && (n6 = le.groupMode);
      var o5 = [];
      if (0 === e7.length) return o5;
      var d3 = /* @__PURE__ */ new Map(), u2 = e7[0].width, s2 = e7[0].height;
      if ("stacked" === n6) {
        var c2 = /* @__PURE__ */ new Map();
        e7.forEach(function(e8) {
          var t7 = e8.data, a5 = t7.indexValue, i6 = t7.value;
          Me(d3, a5, Number(i6)), Be(c2, a5, Number(i6));
        }), c2.forEach(function(e8, n7) {
          var c3, h3, f2, b4 = d3.get(n7) || 0;
          "vertical" === i5 ? (c3 = t6(n7), h3 = a4(e8), f2 = a4(e8 / 2)) : (c3 = t6(e8), h3 = a4(n7), f2 = t6(e8 / 2)), c3 += "vertical" === i5 ? u2 / 2 : l3, h3 += "vertical" === i5 ? -l3 : s2 / 2, o5.push({ key: "total_" + n7, x: c3, y: h3, value: b4, formattedValue: r5(b4), animationOffset: f2 });
        });
      } else if ("grouped" === n6) {
        var h2 = /* @__PURE__ */ new Map(), f = /* @__PURE__ */ new Map();
        e7.forEach(function(e8) {
          var t7 = e8.data, a5 = t7.indexValue, i6 = t7.value;
          Me(d3, a5, Number(i6)), Re(h2, a5, Number(i6)), Oe(f, a5);
        }), h2.forEach(function(e8, n7) {
          var c3, h3, b4, g3 = d3.get(n7) || 0, v3 = f.get(n7);
          "vertical" === i5 ? (c3 = t6(n7), h3 = a4(e8), b4 = a4(e8 / 2)) : (c3 = t6(e8), h3 = a4(n7), b4 = t6(e8 / 2)), c3 += "vertical" === i5 ? v3 * u2 / 2 : l3, h3 += "vertical" === i5 ? -l3 : v3 * s2 / 2, o5.push({ key: "total_" + n7, x: c3, y: h3, value: g3, formattedValue: r5(g3), animationOffset: b4 });
        });
      }
      return o5;
    }(me2, pe2, ye2, M3, C3, ae2, ce2);
  }, [me2, pe2, ye2, M3, C3, ae2, ce2]);
  return { bars: me2, barsWithValue: Se2, xScale: pe2, yScale: ye2, getIndex: de2, getLabel: ue2, getTooltipLabel: se2, formatValue: ce2, getColor: fe2, getBorderColor: be2, getLabelColor: ge2, shouldRenderBarLabel: ke2, hiddenIds: ne2, toggleSerie: oe2, legendsWithData: Ie2, barTotals: Ve2 };
};
var Ve = function(e7) {
  var t5 = e7.data, a4 = e7.springConfig, i5 = e7.animate, n5 = e7.layout, l2 = void 0 === n5 ? re2.layout : n5, r4 = M();
  return useTransition(t5, { keys: function(e8) {
    return e8.key;
  }, from: function(e8) {
    return { x: "vertical" === l2 ? e8.x : e8.animationOffset, y: "vertical" === l2 ? e8.animationOffset : e8.y, labelOpacity: 0 };
  }, enter: function(e8) {
    return { x: e8.x, y: e8.y, labelOpacity: 1 };
  }, update: function(e8) {
    return { x: e8.x, y: e8.y, labelOpacity: 1 };
  }, leave: function(e8) {
    return { x: "vertical" === l2 ? e8.x : e8.animationOffset, y: "vertical" === l2 ? e8.animationOffset : e8.y, labelOpacity: 0 };
  }, config: a4, immediate: !i5, initial: i5 ? void 0 : null })(function(e8, t6) {
    return (0, import_jsx_runtime3.jsx)(animated.text, { x: e8.x, y: e8.y, fillOpacity: e8.labelOpacity, style: Q2({}, r4.labels.text, { pointerEvents: "none" }), fontWeight: "bold", fontSize: r4.labels.text.fontSize, fontFamily: r4.labels.text.fontFamily, textAnchor: "vertical" === l2 ? "middle" : "start", alignmentBaseline: "vertical" === l2 ? "alphabetic" : "middle", children: t6.formattedValue }, t6.key);
  });
};
var Te = ["isInteractive", "animate", "motionConfig", "theme", "renderWrapper"];
var He = function(a4) {
  var i5, n5 = a4.data, r4 = a4.indexBy, o4 = a4.keys, s = a4.margin, c = a4.width, h = a4.height, f = a4.groupMode, b4 = a4.layout, g2 = a4.valueScale, S3 = a4.indexScale, k2 = a4.padding, w4 = a4.innerPadding, L4 = a4.axisTop, C3 = a4.axisRight, W4 = a4.axisBottom, B2 = void 0 === W4 ? re2.axisBottom : W4, R4 = a4.axisLeft, O3 = void 0 === R4 ? re2.axisLeft : R4, I2 = a4.enableGridX, T5 = void 0 === I2 ? re2.enableGridX : I2, H2 = a4.enableGridY, P3 = void 0 === H2 ? re2.enableGridY : H2, E4 = a4.gridXValues, F = a4.gridYValues, z4 = a4.layers, D3 = void 0 === z4 ? re2.layers : z4, A2 = a4.barComponent, X3 = void 0 === A2 ? re2.barComponent : A2, Y3 = a4.enableLabel, G = void 0 === Y3 ? re2.enableLabel : Y3, N = a4.label, j3 = a4.labelSkipWidth, K = void 0 === j3 ? re2.labelSkipWidth : j3, _2 = a4.labelSkipHeight, q3 = void 0 === _2 ? re2.labelSkipHeight : _2, J3 = a4.labelTextColor, U2 = a4.labelPosition, Z3 = void 0 === U2 ? re2.labelPosition : U2, te2 = a4.labelOffset, ae2 = void 0 === te2 ? re2.labelOffset : te2, ie2 = a4.markers, ne2 = void 0 === ie2 ? re2.markers : ie2, le2 = a4.colorBy, oe2 = a4.colors, de2 = a4.defs, ue2 = void 0 === de2 ? re2.defs : de2, se2 = a4.fill, ce2 = void 0 === se2 ? re2.fill : se2, fe2 = a4.borderRadius, be2 = void 0 === fe2 ? re2.borderRadius : fe2, ge2 = a4.borderWidth, ve2 = void 0 === ge2 ? re2.borderWidth : ge2, me2 = a4.borderColor, pe2 = a4.annotations, ye2 = void 0 === pe2 ? re2.annotations : pe2, xe2 = a4.legendLabel, Se2 = a4.tooltipLabel, ke2 = a4.valueFormat, we2 = a4.isInteractive, Le2 = void 0 === we2 ? re2.isInteractive : we2, Ce2 = a4.tooltip, We2 = void 0 === Ce2 ? re2.tooltip : Ce2, Me2 = a4.onClick, Be2 = a4.onMouseEnter, Re2 = a4.onMouseLeave, Oe2 = a4.legends, Te2 = a4.role, He2 = void 0 === Te2 ? re2.role : Te2, Pe2 = a4.ariaLabel, Ee2 = a4.ariaLabelledBy, Fe2 = a4.ariaDescribedBy, ze2 = a4.isFocusable, De2 = void 0 === ze2 ? re2.isFocusable : ze2, Ae2 = a4.barAriaLabel, Xe2 = a4.barAriaLabelledBy, Ye3 = a4.barAriaDescribedBy, Ge2 = a4.barAriaHidden, Ne = a4.barAriaDisabled, je = a4.initialHiddenIds, Ke = a4.enableTotals, _e = void 0 === Ke ? re2.enableTotals : Ke, qe = a4.totalsOffset, Je = void 0 === qe ? re2.totalsOffset : qe, Qe = a4.forwardedRef, Ue = Dr(), Ze = Ue.animate, $e = Ue.config, et = cn(c, h, s), tt = et.outerWidth, at = et.outerHeight, it = et.margin, nt = et.innerWidth, lt = et.innerHeight, rt = Ie({ indexBy: r4, label: N, tooltipLabel: Se2, valueFormat: ke2, colors: oe2, colorBy: le2, borderColor: me2, labelTextColor: J3, groupMode: f, layout: b4, data: n5, keys: o4, margin: it, width: nt, height: lt, padding: k2, innerPadding: w4, valueScale: g2, indexScale: S3, enableLabel: G, labelSkipWidth: K, labelSkipHeight: q3, legends: Oe2, legendLabel: xe2, initialHiddenIds: je, totalsOffset: Je }), ot = rt.bars, dt = rt.barsWithValue, ut2 = rt.xScale, st = rt.yScale, ct2 = rt.getLabel, ht2 = rt.getTooltipLabel, ft2 = rt.getBorderColor, bt = rt.getLabelColor, gt2 = rt.shouldRenderBarLabel, vt = rt.toggleSerie, mt = rt.legendsWithData, pt = rt.barTotals, yt = rt.getColor, xt = he(b4, null != (i5 = null == g2 ? void 0 : g2.reverse) && i5, Z3, ae2), St = useTransition(dt, { keys: function(e7) {
    return e7.key;
  }, from: function(e7) {
    return Q2({ borderColor: ft2(e7), color: e7.color, height: 0, labelColor: bt(e7), labelOpacity: 0 }, xt(e7.width, e7.height), { transform: "translate(" + e7.x + ", " + (e7.y + e7.height) + ")", width: e7.width }, "vertical" === b4 ? {} : { height: e7.height, transform: "translate(" + e7.x + ", " + e7.y + ")", width: 0 });
  }, enter: function(e7) {
    return Q2({ borderColor: ft2(e7), color: e7.color, height: e7.height, labelColor: bt(e7), labelOpacity: 1 }, xt(e7.width, e7.height), { transform: "translate(" + e7.x + ", " + e7.y + ")", width: e7.width });
  }, update: function(e7) {
    return Q2({ borderColor: ft2(e7), color: e7.color, height: e7.height, labelColor: bt(e7), labelOpacity: 1 }, xt(e7.width, e7.height), { transform: "translate(" + e7.x + ", " + e7.y + ")", width: e7.width });
  }, leave: function(e7) {
    return Q2({ borderColor: ft2(e7), color: e7.color, height: 0, labelColor: bt(e7), labelOpacity: 0 }, xt(e7.width, e7.height), { labelY: 0, transform: "translate(" + e7.x + ", " + (e7.y + e7.height) + ")", width: e7.width }, "vertical" === b4 ? {} : Q2({}, xt(e7.width, e7.height), { labelX: 0, height: e7.height, transform: "translate(" + e7.x + ", " + e7.y + ")", width: 0 }));
  }, config: $e, immediate: !Ze, initial: Ze ? void 0 : null }), kt = (0, import_react3.useMemo)(function() {
    return { borderRadius: be2, borderWidth: ve2, enableLabel: G, isInteractive: Le2, labelSkipWidth: K, labelSkipHeight: q3, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getTooltipLabel: ht2, tooltip: We2, isFocusable: De2, ariaLabel: Ae2, ariaLabelledBy: Xe2, ariaDescribedBy: Ye3, ariaHidden: Ge2, ariaDisabled: Ne };
  }, [be2, ve2, G, ht2, Le2, q3, K, Me2, Be2, Re2, We2, De2, Ae2, Xe2, Ye3, Ge2, Ne]), wt = Mn(ue2, ot, ce2, { dataKey: "data", targetKey: "data.fill" }), Lt = { annotations: null, axes: null, bars: null, grid: null, legends: null, markers: null, totals: null };
  D3.includes("annotations") && (Lt.annotations = (0, import_jsx_runtime3.jsx)($, { bars: ot, annotations: ye2 }, "annotations")), D3.includes("axes") && (Lt.axes = (0, import_jsx_runtime3.jsx)(V, { xScale: ut2, yScale: st, width: nt, height: lt, top: L4, right: C3, bottom: B2, left: O3 }, "axes")), D3.includes("bars") && (Lt.bars = (0, import_jsx_runtime3.jsx)(import_react3.Fragment, { children: St(function(e7, a5) {
    return (0, import_react3.createElement)(X3, Q2({}, kt, { bar: a5, style: e7, shouldRenderLabel: gt2(a5), label: ct2(a5.data) }));
  }) }, "bars")), D3.includes("grid") && (Lt.grid = (0, import_jsx_runtime3.jsx)(j, { width: nt, height: lt, xScale: T5 ? ut2 : null, yScale: P3 ? st : null, xValues: E4, yValues: F }, "grid")), D3.includes("legends") && (Lt.legends = (0, import_jsx_runtime3.jsx)(ee, { width: nt, height: lt, legends: mt, toggleSerie: vt }, "legends")), D3.includes("markers") && (Lt.markers = (0, import_jsx_runtime3.jsx)(Pt, { markers: ne2, width: nt, height: lt, xScale: ut2, yScale: st }, "markers")), D3.includes("totals") && _e && (Lt.totals = (0, import_jsx_runtime3.jsx)(Ve, { data: pt, springConfig: $e, animate: Ze, layout: b4 }, "totals"));
  var Ct = Q2({}, kt, { margin: it, width: c, height: h, innerWidth: nt, innerHeight: lt, bars: ot, legendData: mt, enableLabel: G, xScale: ut2, yScale: st, tooltip: We2, getTooltipLabel: ht2, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getColor: yt });
  return (0, import_jsx_runtime3.jsx)(Rt, { width: tt, height: at, margin: it, defs: wt, role: He2, ariaLabel: Pe2, ariaLabelledBy: Ee2, ariaDescribedBy: Fe2, isFocusable: De2, ref: Qe, children: D3.map(function(e7, a5) {
    var i6;
    return "function" == typeof e7 ? (0, import_jsx_runtime3.jsx)(import_react3.Fragment, { children: (0, import_react3.createElement)(e7, Ct) }, a5) : null != (i6 = null == Lt ? void 0 : Lt[e7]) ? i6 : null;
  }) });
};
var Pe = (0, import_react3.forwardRef)(function(e7, t5) {
  var a4 = e7.isInteractive, i5 = void 0 === a4 ? re2.isInteractive : a4, n5 = e7.animate, l2 = void 0 === n5 ? re2.animate : n5, r4 = e7.motionConfig, o4 = void 0 === r4 ? re2.motionConfig : r4, d2 = e7.theme, u = e7.renderWrapper, s = U(e7, Te);
  return (0, import_jsx_runtime3.jsx)(Fr, { animate: l2, isInteractive: i5, motionConfig: o4, renderWrapper: u, theme: d2, children: (0, import_jsx_runtime3.jsx)(He, Q2({}, s, { isInteractive: i5, forwardedRef: t5 })) });
});
var Ee = ["isInteractive", "renderWrapper", "theme"];
var Fe = function(e7, t5, a4, i5) {
  return e7.find(function(e8) {
    return wn(e8.x + t5.left, e8.y + t5.top, e8.width, e8.height, a4, i5);
  });
};
var ze = function(i5) {
  var n5, l2 = i5.data, d2 = i5.indexBy, u = i5.keys, h = i5.margin, f = i5.width, g2 = i5.height, v2 = i5.groupMode, p2 = i5.layout, y = i5.valueScale, x2 = i5.indexScale, w4 = i5.padding, L4 = i5.innerPadding, C3 = i5.axisTop, W4 = i5.axisRight, M3 = i5.axisBottom, R4 = void 0 === M3 ? oe.axisBottom : M3, T5 = i5.axisLeft, H2 = void 0 === T5 ? oe.axisLeft : T5, P3 = i5.enableGridX, F = void 0 === P3 ? oe.enableGridX : P3, z4 = i5.enableGridY, X3 = void 0 === z4 ? oe.enableGridY : z4, Y3 = i5.gridXValues, j3 = i5.gridYValues, K = i5.labelPosition, _2 = void 0 === K ? oe.labelPosition : K, q3 = i5.labelOffset, J3 = void 0 === q3 ? oe.labelOffset : q3, U2 = i5.layers, Z3 = void 0 === U2 ? oe.layers : U2, $2 = i5.renderBar, ee2 = void 0 === $2 ? oe.renderBar : $2, te2 = i5.enableLabel, ae2 = void 0 === te2 ? oe.enableLabel : te2, ie2 = i5.label, ne2 = i5.labelSkipWidth, le2 = void 0 === ne2 ? oe.labelSkipWidth : ne2, re3 = i5.labelSkipHeight, de2 = void 0 === re3 ? oe.labelSkipHeight : re3, ue2 = i5.labelTextColor, se2 = i5.colorBy, ce2 = i5.colors, fe2 = i5.borderRadius, be2 = void 0 === fe2 ? oe.borderRadius : fe2, ge2 = i5.borderWidth, ve2 = void 0 === ge2 ? oe.borderWidth : ge2, me2 = i5.borderColor, pe2 = i5.annotations, ye2 = void 0 === pe2 ? oe.annotations : pe2, xe2 = i5.legendLabel, Se2 = i5.tooltipLabel, ke2 = i5.valueFormat, we2 = i5.isInteractive, Le2 = void 0 === we2 ? oe.isInteractive : we2, Ce2 = i5.tooltip, We2 = void 0 === Ce2 ? oe.tooltip : Ce2, Me2 = i5.onClick, Be2 = i5.onMouseEnter, Re2 = i5.onMouseLeave, Oe2 = i5.legends, Ve2 = i5.pixelRatio, Te2 = void 0 === Ve2 ? oe.pixelRatio : Ve2, He2 = i5.role, Pe2 = i5.forwardedRef, Ee2 = i5.enableTotals, ze2 = void 0 === Ee2 ? oe.enableTotals : Ee2, De2 = i5.totalsOffset, Ae2 = void 0 === De2 ? oe.totalsOffset : De2, Xe2 = (0, import_react3.useRef)(null), Ye3 = M(), Ge2 = cn(f, g2, h), Ne = Ge2.margin, je = Ge2.innerWidth, Ke = Ge2.innerHeight, _e = Ge2.outerWidth, qe = Ge2.outerHeight, Je = Ie({ indexBy: d2, label: ie2, tooltipLabel: Se2, valueFormat: ke2, colors: ce2, colorBy: se2, borderColor: me2, labelTextColor: ue2, groupMode: v2, layout: p2, data: l2, keys: u, margin: Ne, width: je, height: Ke, padding: w4, innerPadding: L4, valueScale: y, indexScale: x2, enableLabel: ae2, labelSkipWidth: le2, labelSkipHeight: de2, legends: Oe2, legendLabel: xe2, totalsOffset: Ae2 }), Qe = Je.bars, Ue = Je.barsWithValue, Ze = Je.xScale, $e = Je.yScale, et = Je.getLabel, tt = Je.getTooltipLabel, at = Je.getBorderColor, it = Je.getLabelColor, nt = Je.shouldRenderBarLabel, lt = Je.legendsWithData, rt = Je.barTotals, ot = Je.getColor, dt = z(), ut2 = dt.showTooltipFromEvent, st = dt.hideTooltip, ct2 = j2({ annotations: O2({ data: Qe, annotations: ye2, getPosition: function(e7) {
    return { x: e7.x, y: e7.y };
  }, getDimensions: function(e7) {
    var t5 = e7.width, a4 = e7.height;
    return { width: t5, height: a4, size: Math.max(t5, a4) };
  } }) }), ht2 = (0, import_react3.useMemo)(function() {
    return { borderRadius: be2, borderWidth: ve2, isInteractive: Le2, isFocusable: false, labelSkipWidth: le2, labelSkipHeight: de2, margin: Ne, width: f, height: g2, innerWidth: je, innerHeight: Ke, bars: Qe, legendData: lt, enableLabel: ae2, xScale: Ze, yScale: $e, tooltip: We2, getTooltipLabel: tt, onClick: Me2, onMouseEnter: Be2, onMouseLeave: Re2, getColor: ot };
  }, [be2, ve2, Le2, le2, de2, Ne, f, g2, je, Ke, Qe, lt, ae2, Ze, $e, We2, tt, Me2, Be2, Re2, ot]), ft2 = hn(ke2), bt = he(p2, null != (n5 = null == y ? void 0 : y.reverse) && n5, _2, J3);
  (0, import_react3.useEffect)(function() {
    if (Xe2.current) {
      Xe2.current.width = _e * Te2, Xe2.current.height = qe * Te2;
      var e7 = Xe2.current.getContext("2d");
      e7.scale(Te2, Te2), e7.fillStyle = Ye3.background, e7.fillRect(0, 0, _e, qe), e7.translate(Ne.left, Ne.top), Z3.forEach(function(t5) {
        "grid" === t5 ? "number" == typeof Ye3.grid.line.strokeWidth && Ye3.grid.line.strokeWidth > 0 && (e7.lineWidth = Ye3.grid.line.strokeWidth, e7.strokeStyle = Ye3.grid.line.stroke, F && q(e7, { width: je, height: Ke, scale: Ze, axis: "x", values: Y3 }), X3 && q(e7, { width: je, height: Ke, scale: $e, axis: "y", values: j3 })) : "axes" === t5 ? W2(e7, { xScale: Ze, yScale: $e, width: je, height: Ke, top: C3, right: W4, bottom: R4, left: H2, theme: Ye3 }) : "bars" === t5 ? (a(e7, Ye3.text), Ue.forEach(function(t6) {
          ee2(e7, Q2({ bar: t6, borderColor: at(t6), borderRadius: be2, borderWidth: ve2, label: et(t6.data), shouldRenderLabel: nt(t6), labelStyle: Q2({}, Ye3.labels.text, { fill: it(t6) }) }, bt(t6.width, t6.height)));
        })) : "legends" === t5 ? lt.forEach(function(t6) {
          var a4 = t6[0], i6 = t6[1];
          L(e7, Q2({}, a4, { data: i6, containerWidth: je, containerHeight: Ke, theme: Ye3 }));
        }) : "annotations" === t5 ? J(e7, { annotations: ct2, theme: Ye3 }) : "totals" === t5 && ze2 ? function(e8, t6, a4, i6) {
          void 0 === i6 && (i6 = oe.layout), a(e8, a4.labels.text), e8.textBaseline = "vertical" === i6 ? "alphabetic" : "middle", e8.textAlign = "vertical" === i6 ? "center" : "start", t6.forEach(function(t7) {
            d(e8, a4.labels.text, t7.formattedValue, t7.x, t7.y);
          });
        }(e7, rt, Ye3, p2) : "function" == typeof t5 && t5(e7, ht2);
      }), e7.save();
    }
  }, [R4, H2, W4, C3, Ue, be2, ve2, ct2, F, X3, at, et, it, Y3, j3, v2, g2, Ke, je, ht2, Z3, p2, lt, Ne.left, Ne.top, qe, _e, Te2, ee2, Ze, $e, nt, Ye3, f, rt, ze2, ft2, bt]);
  var gt2 = (0, import_react3.useCallback)(function(e7) {
    if (Qe && Xe2.current) {
      var a4 = kn(Xe2.current, e7), i6 = a4[0], n6 = a4[1], l3 = Fe(Qe, Ne, i6, n6);
      void 0 !== l3 ? (ut2((0, import_react3.createElement)(We2, Q2({}, l3.data, { color: l3.color, label: l3.label, value: Number(l3.data.value) })), e7), "mouseenter" === e7.type && (null == Be2 || Be2(l3.data, e7))) : st();
    }
  }, [st, Ne, Be2, Qe, ut2, We2]), vt = (0, import_react3.useCallback)(function(e7) {
    if (Qe && Xe2.current) {
      st();
      var t5 = kn(Xe2.current, e7), a4 = t5[0], i6 = t5[1], n6 = Fe(Qe, Ne, a4, i6);
      n6 && (null == Re2 || Re2(n6.data, e7));
    }
  }, [st, Ne, Re2, Qe]), mt = (0, import_react3.useCallback)(function(e7) {
    if (Qe && Xe2.current) {
      var t5 = kn(Xe2.current, e7), a4 = t5[0], i6 = t5[1], n6 = Fe(Qe, Ne, a4, i6);
      void 0 !== n6 && (null == Me2 || Me2(Q2({}, n6.data, { color: n6.color }), e7));
    }
  }, [Ne, Me2, Qe]);
  return (0, import_jsx_runtime3.jsx)("canvas", { ref: Rn(Xe2, Pe2), width: _e * Te2, height: qe * Te2, style: { width: _e, height: qe, cursor: Le2 ? "auto" : "normal" }, onMouseEnter: Le2 ? gt2 : void 0, onMouseMove: Le2 ? gt2 : void 0, onMouseLeave: Le2 ? vt : void 0, onClick: Le2 ? mt : void 0, role: He2 });
};
var De = (0, import_react3.forwardRef)(function(e7, t5) {
  var a4 = e7.isInteractive, i5 = e7.renderWrapper, n5 = e7.theme, l2 = U(e7, Ee);
  return (0, import_jsx_runtime3.jsx)(Fr, { isInteractive: a4, renderWrapper: i5, theme: n5, animate: false, children: (0, import_jsx_runtime3.jsx)(ze, Q2({}, l2, { isInteractive: a4, forwardedRef: t5 })) });
});
var Ae = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var Xe = (0, import_react3.forwardRef)(function(e7, t5) {
  var a4 = e7.defaultWidth, i5 = e7.defaultHeight, n5 = e7.onResize, l2 = e7.debounceResize, r4 = U(e7, Ae);
  return (0, import_jsx_runtime3.jsx)($r, { defaultWidth: a4, defaultHeight: i5, onResize: n5, debounceResize: l2, children: function(e8) {
    var a5 = e8.width, i6 = e8.height;
    return (0, import_jsx_runtime3.jsx)(Pe, Q2({}, r4, { width: a5, height: i6, ref: t5 }));
  } });
});
var Ye2 = ["defaultWidth", "defaultHeight", "onResize", "debounceResize"];
var Ge = (0, import_react3.forwardRef)(function(e7, t5) {
  var a4 = e7.defaultWidth, i5 = e7.defaultHeight, n5 = e7.onResize, l2 = e7.debounceResize, r4 = U(e7, Ye2);
  return (0, import_jsx_runtime3.jsx)($r, { defaultWidth: a4, defaultHeight: i5, onResize: n5, debounceResize: l2, children: function(e8) {
    var a5 = e8.width, i6 = e8.height;
    return (0, import_jsx_runtime3.jsx)(De, Q2({}, r4, { width: a5, height: i6, ref: t5 }));
  } });
});
export {
  Pe as Bar,
  De as BarCanvas,
  ae as BarItem,
  ne as BarTooltip,
  Ve as BarTotals,
  Xe as ResponsiveBar,
  Ge as ResponsiveBarCanvas,
  oe as canvasDefaultProps,
  le as commonDefaultProps,
  re2 as svgDefaultProps
};
//# sourceMappingURL=@nivo_bar.js.map
